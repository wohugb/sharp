{
    "docs": [
        {
            "location": "/", 
            "text": "sharp\n\n\nThe typical use case for this high speed Node.js module\nis to convert large images in common formats to\nsmaller, web-friendly JPEG, PNG and WebP images of varying dimensions.\n\n\nResizing an image is typically 4x-5x faster than using the\nquickest ImageMagick and GraphicsMagick settings.\n\n\nColour spaces, embedded ICC profiles and alpha transparency channels are all handled correctly.\nLanczos resampling ensures quality is not sacrificed for speed.\n\n\nAs well as image resizing, operations such as\nrotation, extraction, compositing and gamma correction are available.\n\n\nOS X, Windows (x64), Linux (x64, ARM) systems do not require\nthe installation of any external runtime dependencies.\n\n\n\n\n\u683c\u5f0f\n\n\nThis module supports reading JPEG, PNG, WebP, TIFF, GIF and SVG images.\n\n\nOutput images can be in JPEG, PNG, WebP and TIFF formats as well as uncompressed raw pixel data.\n\n\nStreams, Buffer objects and the filesystem can be used for input and output.\n\n\nA single input Stream can be split into multiple processing pipelines and output Streams.\n\n\nDeep Zoom image pyramids can be generated,\nsuitable for use with \"slippy map\" tile viewers like\n\nOpenSeadragon\n\nand \nLeaflet\n.\n\n\n\u5feb\n\n\nThis module is powered by the blazingly fast\n\nlibvips\n image processing library,\noriginally created in 1989 at Birkbeck College\nand currently maintained by\n\nJohn Cupitt\n.\n\n\nOnly small regions of uncompressed image data\nare held in memory and processed at a time,\ntaking full advantage of multiple CPU cores and L1/L2/L3 cache.\n\n\nEverything remains non-blocking thanks to \nlibuv\n,\nno child processes are spawned and Promises/A+ are supported.\n\n\n\u6700\u4f73\n\n\nHuffman tables are optimised when generating JPEG output images\nwithout having to use separate command line tools like\n\njpegoptim\n and\n\njpegtran\n.\n\n\nPNG filtering is disabled by default,\nwhich for diagrams and line art often produces the same result\nas \npngcrush\n.\n\n\n\u8d21\u732e\n\n\nA \nguide for contributors\n\ncovers reporting bugs, requesting features and submitting code changes.\n\n\n\u5de5\u4f5c\u4eba\u5458\n\n\nThis module would never have been possible without\nthe help and code contributions of the following people:\n\n\n\n\nJohn Cupitt\n\n\nPierre Inglebert\n\n\nJonathan Ong\n\n\nChanon Sajjamanochai\n\n\nJuliano Julio\n\n\nDaniel Gasienica\n\n\nJulian Walker\n\n\nAmit Pitaru\n\n\nBrandon Aaron\n\n\nAndreas Lind\n\n\nMaurus Cuelenaere\n\n\nLinus Unneb\u00e4ck\n\n\nVictor Mateevitsi\n\n\nAlaric Holloway\n\n\nBernhard K. Weisshuhn\n\n\nDavid A. Carley\n\n\nJohn Tobin\n\n\nKenton Gray\n\n\nFelix B\u00fcnemann\n\n\nSamy Al Zahrani\n\n\nChintan Thakkar\n\n\nF. Orlando Galashan\n\n\nKleis Auke Wolthuizen\n\n\nMatt Hirsch\n\n\nRahul Nanwani\n\n\nMatthias Thoemmes\n\n\nPatrick Paskaris\n\n\nJ\u00e9r\u00e9my Lal\n\n\nAlice Monday\n\n\nKristo Jorgenson\n\n\nYves Bos\n\n\nNicolas Coden\n\n\nMatt Parrish\n\n\nMatthew McEachen\n\n\nJarda Kot\u011b\u0161ovec\n\n\nKenric D'Souza\n\n\n\n\nThank you!\n\n\n\u8bc1\u4e66\n\n\nCopyright 2013, 2014, 2015, 2016, 2017 Lovell Fuller and contributors.\n\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.", 
            "title": "\u4e3b\u9875"
        }, 
        {
            "location": "/#sharp", 
            "text": "The typical use case for this high speed Node.js module\nis to convert large images in common formats to\nsmaller, web-friendly JPEG, PNG and WebP images of varying dimensions.  Resizing an image is typically 4x-5x faster than using the\nquickest ImageMagick and GraphicsMagick settings.  Colour spaces, embedded ICC profiles and alpha transparency channels are all handled correctly.\nLanczos resampling ensures quality is not sacrificed for speed.  As well as image resizing, operations such as\nrotation, extraction, compositing and gamma correction are available.  OS X, Windows (x64), Linux (x64, ARM) systems do not require\nthe installation of any external runtime dependencies.", 
            "title": "sharp"
        }, 
        {
            "location": "/#_1", 
            "text": "This module supports reading JPEG, PNG, WebP, TIFF, GIF and SVG images.  Output images can be in JPEG, PNG, WebP and TIFF formats as well as uncompressed raw pixel data.  Streams, Buffer objects and the filesystem can be used for input and output.  A single input Stream can be split into multiple processing pipelines and output Streams.  Deep Zoom image pyramids can be generated,\nsuitable for use with \"slippy map\" tile viewers like OpenSeadragon \nand  Leaflet .", 
            "title": "\u683c\u5f0f"
        }, 
        {
            "location": "/#_2", 
            "text": "This module is powered by the blazingly fast libvips  image processing library,\noriginally created in 1989 at Birkbeck College\nand currently maintained by John Cupitt .  Only small regions of uncompressed image data\nare held in memory and processed at a time,\ntaking full advantage of multiple CPU cores and L1/L2/L3 cache.  Everything remains non-blocking thanks to  libuv ,\nno child processes are spawned and Promises/A+ are supported.", 
            "title": "\u5feb"
        }, 
        {
            "location": "/#_3", 
            "text": "Huffman tables are optimised when generating JPEG output images\nwithout having to use separate command line tools like jpegoptim  and jpegtran .  PNG filtering is disabled by default,\nwhich for diagrams and line art often produces the same result\nas  pngcrush .", 
            "title": "\u6700\u4f73"
        }, 
        {
            "location": "/#_4", 
            "text": "A  guide for contributors \ncovers reporting bugs, requesting features and submitting code changes.", 
            "title": "\u8d21\u732e"
        }, 
        {
            "location": "/#_5", 
            "text": "This module would never have been possible without\nthe help and code contributions of the following people:   John Cupitt  Pierre Inglebert  Jonathan Ong  Chanon Sajjamanochai  Juliano Julio  Daniel Gasienica  Julian Walker  Amit Pitaru  Brandon Aaron  Andreas Lind  Maurus Cuelenaere  Linus Unneb\u00e4ck  Victor Mateevitsi  Alaric Holloway  Bernhard K. Weisshuhn  David A. Carley  John Tobin  Kenton Gray  Felix B\u00fcnemann  Samy Al Zahrani  Chintan Thakkar  F. Orlando Galashan  Kleis Auke Wolthuizen  Matt Hirsch  Rahul Nanwani  Matthias Thoemmes  Patrick Paskaris  J\u00e9r\u00e9my Lal  Alice Monday  Kristo Jorgenson  Yves Bos  Nicolas Coden  Matt Parrish  Matthew McEachen  Jarda Kot\u011b\u0161ovec  Kenric D'Souza   Thank you!", 
            "title": "\u5de5\u4f5c\u4eba\u5458"
        }, 
        {
            "location": "/#_6", 
            "text": "Copyright 2013, 2014, 2015, 2016, 2017 Lovell Fuller and contributors.  Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.", 
            "title": "\u8bc1\u4e66"
        }, 
        {
            "location": "/install/", 
            "text": "\u5b89\u88c5\n\n\nnpm install sharp\n\n\n\n\nyarn add sharp\n\n\n\n\n\u5148\u51b3\u6761\u4ef6\n\n\n\n\nNode v4.5.0+\n\n\nC++11 compatible compiler such as gcc 4.8+, clang 3.0+ or MSVC 2013+\n\n\nnode-gyp\n and its dependencies (includes Python)\n\n\n\n\nLinux\n\n\n\n\n\n\nlibvips and its dependencies are fetched and stored within \nnode_modules/sharp/vendor\n during \nnpm install\n.\nThis involves an automated HTTPS download of approximately 7MB.\n\n\nMost recent Linux-based operating systems with glibc running on x64 and ARMv6+ CPUs should \"just work\", e.g.:\n\n\n\n\nDebian 7, 8\n\n\nUbuntu 14.04, 16.04\n\n\nCentos 7\n\n\nFedora\n\n\nopenSUSE 13.2\n\n\nArchlinux\n\n\nRaspbian Jessie\n\n\nAmazon Linux 2017.03.1\n\n\nSolus\n\n\n\n\nTo use a globally-installed version of libvips instead of the provided binaries,\nmake sure it is at least the version listed under \nconfig.libvips\n in the \npackage.json\n file\nand that it can be located using \npkg-config --modversion vips-cpp\n.\n\n\nIf you are using non-stadard paths (anything other than \n/usr\n or \n/usr/local\n),\nyou might need to set \nPKG_CONFIG_PATH\n during \nnpm install\n\nand \nLD_LIBRARY_PATH\n at runtime.\n\n\nThis allows the use of newer versions of libvips with older versions of sharp.\n\n\nFor 32-bit Intel CPUs and older Linux-based operating systems such as Centos 6,\nit is recommended to install a system-wide installation of libvips from source:\n\n\nhttps://jcupitt.github.io/libvips/install.html#building-libvips-from-a-source-tarball\n\n\nAlpine Linux\n\n\nlibvips is available in the\n\ntesting repository\n:\n\n\napk add vips-dev fftw-dev --update-cache --repository https://dl-3.alpinelinux.org/alpine/edge/testing/\n\n\n\n\nThe smaller stack size of musl libc means\nlibvips may need to be used without a cache\nvia \nsharp.cache(false)\n to avoid a stack overflow.\n\n\nMac OS\n\n\n\n\nlibvips and its dependencies are fetched and stored within \nnode_modules/sharp/vendor\n during \nnpm install\n.\nThis involves an automated HTTPS download of approximately 7MB.\n\n\nTo use your own version of libvips instead of the provided binaries, make sure it is\nat least the version listed under \nconfig.libvips\n in the \npackage.json\n file and\nthat it can be located using \npkg-config --modversion vips-cpp\n.\n\n\nWindows x64\n\n\n\n\nlibvips and its dependencies are fetched and stored within \nnode_modules\\sharp\\vendor\n during \nnpm install\n.\nThis involves an automated HTTPS download of approximately 12MB.\n\n\nOnly 64-bit (x64) \nnode.exe\n is supported.\n\n\nFreeBSD\n\n\nlibvips must be installed before \nnpm install\n is run.\n\n\nThis can be achieved via package or ports:\n\n\npkg install -y pkgconf vips\n\n\n\n\ncd /usr/ports/graphics/vips/ \n make install clean\n\n\n\n\nFreeBSD's gcc v4 and v5 need \nCXXFLAGS=-D_GLIBCXX_USE_C99\n set for C++11 support due to\nhttps://bugs.freebsd.org/bugzilla/show_bug.cgi?id=193528\n\n\nHeroku\n\n\nlibvips and its dependencies are fetched and stored within \nnode_modules\\sharp\\vendor\n during \nnpm install\n.\nThis involves an automated HTTPS download of approximately 7MB.\n\n\nSet \nNODE_MODULES_CACHE\n\nto \nfalse\n when using the \nyarn\n package manager.\n\n\nDocker\n\n\nMarc Bachmann\n maintains an\n\nUbuntu-based Dockerfile for libvips\n.\n\n\ndocker pull marcbachmann/libvips\n\n\n\n\nWill Jordan\n maintains an\n\nAlpine-based Dockerfile for libvips\n.\n\n\ndocker pull wjordan/libvips\n\n\n\n\nTailor Brands\n maintain\n\nDebian-based Dockerfiles for libvips and nodejs\n.\n\n\ndocker pull tailor/docker-libvips\n\n\n\n\nAWS Lambda\n\n\nA \ndeployment package\n for the\n\nLambda Execution Environment\n\ncan be built using Docker.\n\n\nrm -rf node_modules/sharp\ndocker run -v \n$PWD\n:/var/task lambci/lambda:build-nodejs6.10 npm install\n\n\n\n\nSet the Lambda runtime to Node.js 6.10.\n\n\nTo get the best performance select the largest memory available. A 1536 MB function provides ~12x more CPU time than a 128 MB function.\n\n\n\u6784\u5efa\u5de5\u5177\n\n\n\n\ngulp-responsive\n\n\ngrunt-sharp\n\n\n\n\n\u4ee3\u7801\u5de5\u5177\n\n\n\n\nSharp TypeScript Types\n\n\n\n\nCLI \u5de5\u5177\n\n\n\n\nsharp-cli\n\n\n\n\n\u5b89\u5168\n\n\nMany users of this module process untrusted, user-supplied images,\nbut there are aspects of security to consider when doing so.\n\n\nIt is possible to compile libvips with support for various third-party image loaders.\nEach of these libraries has undergone differing levels of security testing.\n\n\nWhilst tools such as \nAmerican Fuzzy Lop\n\nand \nValgrind\n have been used to test\nthe most popular web-based formats, as well as libvips itself,\nyou are advised to perform your own testing and sandboxing.\n\n\nImageMagick in particular has a relatively large attack surface,\nwhich can be partially mitigated with a\n\npolicy.xml\n\nconfiguration file to prevent the use of coders known to be vulnerable.\n\n\npolicymap\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nEPHEMERAL\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nURL\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nHTTPS\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nMVG\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nMSL\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nTEXT\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nSHOW\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nWIN\n /\n\n  \npolicy domain=\ncoder\n rights=\nnone\n pattern=\nPLT\n /\n\n\n/policymap\n\n\n\n\n\nSet the \nMAGICK_CONFIGURE_PATH\n environment variable\nto the directory containing the \npolicy.xml\n file.\n\n\nPre-compiled libvips binaries\n\n\nIf a global installation of libvips that meets the\nminimum version requirement cannot be found,\nthis module will attempt to download a pre-compiled bundle of libvips\nand its dependencies on Linux and Windows machines.\n\n\nShould you need to manually download and inspect these files,\nyou can do so via https://github.com/lovell/sharp-libvips/releases\n\n\nShould you wish to install these from your own location,\nset the \nSHARP_DIST_BASE_URL\n environment variable, e.g.\n\n\nSHARP_DIST_BASE_URL=\nhttps://hostname/path/\n npm install sharp\n\n\n\n\nto use \nhttps://hostname/path/libvips-x.y.z-platform.tar.gz\n.\n\n\n\u8bc1\u4e66\n\n\nThis module is licensed under the terms of the\n\nApache 2.0 Licence\n.\n\n\nThe libraries downloaded and used by this module\nare done so under the terms of the following licences,\nall of which are compatible with the Apache 2.0 Licence.\n\n\nUse of libraries under the terms of the LGPLv3 is via the\n\"any later version\" clause of the LGPLv2 or LGPLv2.1.\n\n\n\n\n\n\n\n\nLibrary\n\n\nUsed under the terms of\n\n\n\n\n\n\n\n\n\n\ncairo\n\n\nMozilla Public License 2.0\n\n\n\n\n\n\nexpat\n\n\nMIT Licence\n\n\n\n\n\n\nfontconfig\n\n\nfontconfig Licence\n (BSD-like)\n\n\n\n\n\n\nfreetype\n\n\nfreetype Licence\n (BSD-like)\n\n\n\n\n\n\ngiflib\n\n\nMIT Licence\n\n\n\n\n\n\nglib\n\n\nLGPLv3\n\n\n\n\n\n\nharfbuzz\n\n\nMIT Licence\n\n\n\n\n\n\nlcms\n\n\nMIT Licence\n\n\n\n\n\n\nlibcroco\n\n\nLGPLv3\n\n\n\n\n\n\nlibexif\n\n\nLGPLv3\n\n\n\n\n\n\nlibffi\n\n\nMIT Licence\n\n\n\n\n\n\nlibgsf\n\n\nLGPLv3\n\n\n\n\n\n\nlibjpeg-turbo\n\n\nzlib License, IJG License\n\n\n\n\n\n\nlibpng\n\n\nlibpng License\n\n\n\n\n\n\nlibrsvg\n\n\nLGPLv3\n\n\n\n\n\n\nlibtiff\n\n\nlibtiff License\n (BSD-like)\n\n\n\n\n\n\nlibvips\n\n\nLGPLv3\n\n\n\n\n\n\nlibwebp\n\n\nNew BSD License\n\n\n\n\n\n\nlibxml2\n\n\nMIT Licence\n\n\n\n\n\n\npango\n\n\nLGPLv3\n\n\n\n\n\n\npixman\n\n\nMIT Licence\n\n\n\n\n\n\nzlib\n\n\nzlib Licence", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/install/#_1", 
            "text": "npm install sharp  yarn add sharp", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/install/#_2", 
            "text": "Node v4.5.0+  C++11 compatible compiler such as gcc 4.8+, clang 3.0+ or MSVC 2013+  node-gyp  and its dependencies (includes Python)", 
            "title": "\u5148\u51b3\u6761\u4ef6"
        }, 
        {
            "location": "/install/#linux", 
            "text": "libvips and its dependencies are fetched and stored within  node_modules/sharp/vendor  during  npm install .\nThis involves an automated HTTPS download of approximately 7MB.  Most recent Linux-based operating systems with glibc running on x64 and ARMv6+ CPUs should \"just work\", e.g.:   Debian 7, 8  Ubuntu 14.04, 16.04  Centos 7  Fedora  openSUSE 13.2  Archlinux  Raspbian Jessie  Amazon Linux 2017.03.1  Solus   To use a globally-installed version of libvips instead of the provided binaries,\nmake sure it is at least the version listed under  config.libvips  in the  package.json  file\nand that it can be located using  pkg-config --modversion vips-cpp .  If you are using non-stadard paths (anything other than  /usr  or  /usr/local ),\nyou might need to set  PKG_CONFIG_PATH  during  npm install \nand  LD_LIBRARY_PATH  at runtime.  This allows the use of newer versions of libvips with older versions of sharp.  For 32-bit Intel CPUs and older Linux-based operating systems such as Centos 6,\nit is recommended to install a system-wide installation of libvips from source:  https://jcupitt.github.io/libvips/install.html#building-libvips-from-a-source-tarball", 
            "title": "Linux"
        }, 
        {
            "location": "/install/#alpine-linux", 
            "text": "libvips is available in the testing repository :  apk add vips-dev fftw-dev --update-cache --repository https://dl-3.alpinelinux.org/alpine/edge/testing/  The smaller stack size of musl libc means\nlibvips may need to be used without a cache\nvia  sharp.cache(false)  to avoid a stack overflow.", 
            "title": "Alpine Linux"
        }, 
        {
            "location": "/install/#mac-os", 
            "text": "libvips and its dependencies are fetched and stored within  node_modules/sharp/vendor  during  npm install .\nThis involves an automated HTTPS download of approximately 7MB.  To use your own version of libvips instead of the provided binaries, make sure it is\nat least the version listed under  config.libvips  in the  package.json  file and\nthat it can be located using  pkg-config --modversion vips-cpp .", 
            "title": "Mac OS"
        }, 
        {
            "location": "/install/#windows-x64", 
            "text": "libvips and its dependencies are fetched and stored within  node_modules\\sharp\\vendor  during  npm install .\nThis involves an automated HTTPS download of approximately 12MB.  Only 64-bit (x64)  node.exe  is supported.", 
            "title": "Windows x64"
        }, 
        {
            "location": "/install/#freebsd", 
            "text": "libvips must be installed before  npm install  is run.  This can be achieved via package or ports:  pkg install -y pkgconf vips  cd /usr/ports/graphics/vips/   make install clean  FreeBSD's gcc v4 and v5 need  CXXFLAGS=-D_GLIBCXX_USE_C99  set for C++11 support due to\nhttps://bugs.freebsd.org/bugzilla/show_bug.cgi?id=193528", 
            "title": "FreeBSD"
        }, 
        {
            "location": "/install/#heroku", 
            "text": "libvips and its dependencies are fetched and stored within  node_modules\\sharp\\vendor  during  npm install .\nThis involves an automated HTTPS download of approximately 7MB.  Set  NODE_MODULES_CACHE \nto  false  when using the  yarn  package manager.", 
            "title": "Heroku"
        }, 
        {
            "location": "/install/#docker", 
            "text": "Marc Bachmann  maintains an Ubuntu-based Dockerfile for libvips .  docker pull marcbachmann/libvips  Will Jordan  maintains an Alpine-based Dockerfile for libvips .  docker pull wjordan/libvips  Tailor Brands  maintain Debian-based Dockerfiles for libvips and nodejs .  docker pull tailor/docker-libvips", 
            "title": "Docker"
        }, 
        {
            "location": "/install/#aws-lambda", 
            "text": "A  deployment package  for the Lambda Execution Environment \ncan be built using Docker.  rm -rf node_modules/sharp\ndocker run -v  $PWD :/var/task lambci/lambda:build-nodejs6.10 npm install  Set the Lambda runtime to Node.js 6.10.  To get the best performance select the largest memory available. A 1536 MB function provides ~12x more CPU time than a 128 MB function.", 
            "title": "AWS Lambda"
        }, 
        {
            "location": "/install/#_3", 
            "text": "gulp-responsive  grunt-sharp", 
            "title": "\u6784\u5efa\u5de5\u5177"
        }, 
        {
            "location": "/install/#_4", 
            "text": "Sharp TypeScript Types", 
            "title": "\u4ee3\u7801\u5de5\u5177"
        }, 
        {
            "location": "/install/#cli", 
            "text": "sharp-cli", 
            "title": "CLI \u5de5\u5177"
        }, 
        {
            "location": "/install/#_5", 
            "text": "Many users of this module process untrusted, user-supplied images,\nbut there are aspects of security to consider when doing so.  It is possible to compile libvips with support for various third-party image loaders.\nEach of these libraries has undergone differing levels of security testing.  Whilst tools such as  American Fuzzy Lop \nand  Valgrind  have been used to test\nthe most popular web-based formats, as well as libvips itself,\nyou are advised to perform your own testing and sandboxing.  ImageMagick in particular has a relatively large attack surface,\nwhich can be partially mitigated with a policy.xml \nconfiguration file to prevent the use of coders known to be vulnerable.  policymap \n   policy domain= coder  rights= none  pattern= EPHEMERAL  / \n   policy domain= coder  rights= none  pattern= URL  / \n   policy domain= coder  rights= none  pattern= HTTPS  / \n   policy domain= coder  rights= none  pattern= MVG  / \n   policy domain= coder  rights= none  pattern= MSL  / \n   policy domain= coder  rights= none  pattern= TEXT  / \n   policy domain= coder  rights= none  pattern= SHOW  / \n   policy domain= coder  rights= none  pattern= WIN  / \n   policy domain= coder  rights= none  pattern= PLT  /  /policymap   Set the  MAGICK_CONFIGURE_PATH  environment variable\nto the directory containing the  policy.xml  file.", 
            "title": "\u5b89\u5168"
        }, 
        {
            "location": "/install/#pre-compiled-libvips-binaries", 
            "text": "If a global installation of libvips that meets the\nminimum version requirement cannot be found,\nthis module will attempt to download a pre-compiled bundle of libvips\nand its dependencies on Linux and Windows machines.  Should you need to manually download and inspect these files,\nyou can do so via https://github.com/lovell/sharp-libvips/releases  Should you wish to install these from your own location,\nset the  SHARP_DIST_BASE_URL  environment variable, e.g.  SHARP_DIST_BASE_URL= https://hostname/path/  npm install sharp  to use  https://hostname/path/libvips-x.y.z-platform.tar.gz .", 
            "title": "Pre-compiled libvips binaries"
        }, 
        {
            "location": "/install/#_6", 
            "text": "This module is licensed under the terms of the Apache 2.0 Licence .  The libraries downloaded and used by this module\nare done so under the terms of the following licences,\nall of which are compatible with the Apache 2.0 Licence.  Use of libraries under the terms of the LGPLv3 is via the\n\"any later version\" clause of the LGPLv2 or LGPLv2.1.     Library  Used under the terms of      cairo  Mozilla Public License 2.0    expat  MIT Licence    fontconfig  fontconfig Licence  (BSD-like)    freetype  freetype Licence  (BSD-like)    giflib  MIT Licence    glib  LGPLv3    harfbuzz  MIT Licence    lcms  MIT Licence    libcroco  LGPLv3    libexif  LGPLv3    libffi  MIT Licence    libgsf  LGPLv3    libjpeg-turbo  zlib License, IJG License    libpng  libpng License    librsvg  LGPLv3    libtiff  libtiff License  (BSD-like)    libvips  LGPLv3    libwebp  New BSD License    libxml2  MIT Licence    pango  LGPLv3    pixman  MIT Licence    zlib  zlib Licence", 
            "title": "\u8bc1\u4e66"
        }, 
        {
            "location": "/api-constructor/", 
            "text": "Sharp\n\n\n\u53c2\u6570\n\n\n\n\ninput\n \n(\nBuffer\n | \nString\n)?\n if present, can be\n     a Buffer containing JPEG, PNG, WebP, GIF, SVG, TIFF or raw pixel image data, or\n     a String containing the path to an JPEG, PNG, WebP, GIF, SVG or TIFF image file.\n     JPEG, PNG, WebP, GIF, SVG, TIFF or raw pixel image data can be streamed into the object when not present.\n\n\noptions\n \nObject\n?\n if present, is an Object with optional attributes.\n\n\noptions.failOnError\n \nBoolean\n by default apply a \"best effort\"\n     to decode images, even if the data is corrupt or invalid. Set this flag to true\n     if you'd rather halt processing and raise an error when loading invalid images. (optional, default \nfalse\n)\n\n\noptions.density\n \nNumber\n integral number representing the DPI for vector images. (optional, default \n72\n)\n\n\noptions.raw\n \nObject\n?\n describes raw pixel input image data. See \nraw()\n for pixel ordering.\n\n\noptions.raw.width\n \nNumber\n?\n \n\n\noptions.raw.height\n \nNumber\n?\n \n\n\noptions.raw.channels\n \nNumber\n?\n 1-4\n\n\n\n\n\n\noptions.create\n \nObject\n?\n describes a new image to be created.\n\n\noptions.create.width\n \nNumber\n?\n \n\n\noptions.create.height\n \nNumber\n?\n \n\n\noptions.create.channels\n \nNumber\n?\n 3-4\n\n\noptions.create.background\n \n(\nString\n | \nObject\n)?\n parsed by the \ncolor\n module to extract values for red, green, blue and alpha.\n\n\n\n\n\n\n\n\n\n\n\n\n\u793a\u4f8b\n\n\nsharp('input.jpg')\n  .resize(300, 200)\n  .toFile('output.jpg', function(err) {\n    // output.jpg is a 300 pixels wide and 200 pixels high image\n    // containing a scaled and cropped version of input.jpg\n  });\n\n\n\n\n// Read image data from readableStream,\n// resize to 300 pixels wide,\n// emit an 'info' event with calculated dimensions\n// and finally write image data to writableStream\nvar transformer = sharp()\n  .resize(300)\n  .on('info', function(info) {\n    console.log('Image height is ' + info.height);\n  });\nreadableStream.pipe(transformer).pipe(writableStream);\n\n\n\n\n// Create a blank 300x200 PNG image of semi-transluent red pixels\nsharp({\n  create: {\n    width: 300,\n    height: 200,\n    channels: 4,\n    background: { r: 255, g: 0, b: 0, alpha: 128 }\n  }\n})\n.png()\n.toBuffer()\n.then( ... );\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nformat\n\n\nAn Object containing nested boolean values representing the available input and output formats/methods.\n\n\n\u793a\u4f8b\n\n\nconsole.log(sharp.format);\n\n\n\n\n\u8fd4\u56de\n \nObject\n \n\n\nversions\n\n\nAn Object containing the version numbers of libvips and its dependencies.\n\n\n\u793a\u4f8b\n\n\nconsole.log(sharp.versions);\n\n\n\n\nqueue\n\n\nAn EventEmitter that emits a \nchange\n event when a task is either:\n\n\n\n\nqueued, waiting for \nlibuv\n to provide a worker thread\n\n\ncomplete\n\n\n\n\n\u793a\u4f8b\n\n\nsharp.queue.on('change', function(queueLength) {\n  console.log('Queue contains ' + queueLength + ' task(s)');\n});", 
            "title": "\u6784\u9020\u51fd\u6570"
        }, 
        {
            "location": "/api-constructor/#sharp", 
            "text": "\u53c2\u6570   input   ( Buffer  |  String )?  if present, can be\n     a Buffer containing JPEG, PNG, WebP, GIF, SVG, TIFF or raw pixel image data, or\n     a String containing the path to an JPEG, PNG, WebP, GIF, SVG or TIFF image file.\n     JPEG, PNG, WebP, GIF, SVG, TIFF or raw pixel image data can be streamed into the object when not present.  options   Object ?  if present, is an Object with optional attributes.  options.failOnError   Boolean  by default apply a \"best effort\"\n     to decode images, even if the data is corrupt or invalid. Set this flag to true\n     if you'd rather halt processing and raise an error when loading invalid images. (optional, default  false )  options.density   Number  integral number representing the DPI for vector images. (optional, default  72 )  options.raw   Object ?  describes raw pixel input image data. See  raw()  for pixel ordering.  options.raw.width   Number ?    options.raw.height   Number ?    options.raw.channels   Number ?  1-4    options.create   Object ?  describes a new image to be created.  options.create.width   Number ?    options.create.height   Number ?    options.create.channels   Number ?  3-4  options.create.background   ( String  |  Object )?  parsed by the  color  module to extract values for red, green, blue and alpha.       \u793a\u4f8b  sharp('input.jpg')\n  .resize(300, 200)\n  .toFile('output.jpg', function(err) {\n    // output.jpg is a 300 pixels wide and 200 pixels high image\n    // containing a scaled and cropped version of input.jpg\n  });  // Read image data from readableStream,\n// resize to 300 pixels wide,\n// emit an 'info' event with calculated dimensions\n// and finally write image data to writableStream\nvar transformer = sharp()\n  .resize(300)\n  .on('info', function(info) {\n    console.log('Image height is ' + info.height);\n  });\nreadableStream.pipe(transformer).pipe(writableStream);  // Create a blank 300x200 PNG image of semi-transluent red pixels\nsharp({\n  create: {\n    width: 300,\n    height: 200,\n    channels: 4,\n    background: { r: 255, g: 0, b: 0, alpha: 128 }\n  }\n})\n.png()\n.toBuffer()\n.then( ... );   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "Sharp"
        }, 
        {
            "location": "/api-constructor/#format", 
            "text": "An Object containing nested boolean values representing the available input and output formats/methods.  \u793a\u4f8b  console.log(sharp.format);  \u8fd4\u56de   Object", 
            "title": "format"
        }, 
        {
            "location": "/api-constructor/#versions", 
            "text": "An Object containing the version numbers of libvips and its dependencies.  \u793a\u4f8b  console.log(sharp.versions);", 
            "title": "versions"
        }, 
        {
            "location": "/api-constructor/#queue", 
            "text": "An EventEmitter that emits a  change  event when a task is either:   queued, waiting for  libuv  to provide a worker thread  complete   \u793a\u4f8b  sharp.queue.on('change', function(queueLength) {\n  console.log('Queue contains ' + queueLength + ' task(s)');\n});", 
            "title": "queue"
        }, 
        {
            "location": "/api-input/", 
            "text": "clone\n\n\nTake a \"snapshot\" of the Sharp instance, returning a new instance.\nCloned instances inherit the input of their parent instance.\nThis allows multiple output Streams and therefore multiple processing pipelines to share a single input Stream.\n\n\n\u793a\u4f8b\n \n\n\nconst pipeline = sharp().rotate();\npipeline.clone().resize(800, 600).pipe(firstWritableStream);\npipeline.clone().extract({ left: 20, top: 20, width: 100, height: 100 }).pipe(secondWritableStream);\nreadableStream.pipe(pipeline);\n// firstWritableStream receives auto-rotated, resized readableStream\n// secondWritableStream receives auto-rotated, extracted region of readableStream\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nmetadata\n\n\nFast access to (uncached) image metadata without decoding any compressed image data.\nA Promises/A+ promise is returned when \ncallback\n is not provided.\n\n\n\n\nformat\n: Name of decoder used to decompress image data e.g. \njpeg\n, \npng\n, \nwebp\n, \ngif\n, \nsvg\n\n\nwidth\n: Number of pixels wide\n\n\nheight\n: Number of pixels high\n\n\nspace\n: Name of colour space interpretation e.g. \nsrgb\n, \nrgb\n, \ncmyk\n, \nlab\n, \nb-w\n \n...\n\n\nchannels\n: Number of bands e.g. \n3\n for sRGB, \n4\n for CMYK\n\n\ndepth\n: Name of pixel depth format e.g. \nuchar\n, \nchar\n, \nushort\n, \nfloat\n \n...\n\n\ndensity\n: Number of pixels per inch (DPI), if present\n\n\nhasProfile\n: Boolean indicating the presence of an embedded ICC profile\n\n\nhasAlpha\n: Boolean indicating the presence of an alpha transparency channel\n\n\norientation\n: Number value of the EXIF Orientation header, if present\n\n\nexif\n: Buffer containing raw EXIF data, if present\n\n\nicc\n: Buffer containing raw \nICC\n profile data, if present\n\n\n\n\n\u53c2\u6570\n \n\n\n\n\ncallback\n \nFunction\n?\n called with the arguments \n(err, metadata)\n\n\n\n\n\u793a\u4f8b\n \n\n\nconst image = sharp(inputJpg);\nimage\n  .metadata()\n  .then(function(metadata) {\n    return image\n      .resize(Math.round(metadata.width / 2))\n      .webp()\n      .toBuffer();\n  })\n  .then(function(data) {\n    // data contains a WebP image half the width and height of the original JPEG\n  });\n\n\n\n\n\u8fd4\u56de\n \n(\nPromise\nObject\n | Sharp)\n \n\n\nstats\n\n\nAccess to pixel-derived image statistics for every channel in the image.\nA Promise is returned when \ncallback\n is not provided.\n\n\n\n\nchannels\n: Array of channel statistics for each channel in the image. Each channel statistic contains\n\n\nmin\n (minimum value in the channel)\n\n\nmax\n (maximum value in the channel)\n\n\nsum\n (sum of all values in a channel)\n\n\nsquaresSum\n (sum of squared values in a channel)\n\n\nmean\n (mean of the values in a channel)\n\n\nstdev\n (standard deviation for the values in a channel)\n\n\nminX\n (x-coordinate of one of the pixel where the minimum lies)\n\n\nminY\n (y-coordinate of one of the pixel where the minimum lies)\n\n\nmaxX\n (x-coordinate of one of the pixel where the maximum lies)\n\n\nmaxY\n (y-coordinate of one of the pixel where the maximum lies)\n\n\n\n\n\n\nisOpaque\n: Value to identify if the image is opaque or transparent, based on the presence and use of alpha channel\n\n\n\n\n\u53c2\u6570\n \n\n\n\n\ncallback\n \nFunction\n?\n called with the arguments \n(err, stats)\n\n\n\n\n\u793a\u4f8b\n \n\n\nconst image = sharp(inputJpg);\nimage\n  .stats()\n  .then(function(stats) {\n     // stats contains the channel-wise statistics array and the isOpaque value\n  });\n\n\n\n\n\u8fd4\u56de\n \nPromise\nObject\n \n\n\nlimitInputPixels\n\n\nDo not process input images where the number of pixels (width _ height) exceeds this limit.\nAssumes image dimensions contained in the input metadata can be trusted.\nThe default limit is 268402689 (0x3FFF _ 0x3FFF) pixels.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\nlimit\n \n(\nNumber\n | \nBoolean\n)\n an integral Number of pixels, zero or false to remove limit, true to use default limit.\n\n\n\n\n\n\nThrows \nError\n Invalid limit\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nsequentialRead\n\n\nAn advanced setting that switches the libvips access method to \nVIPS_ACCESS_SEQUENTIAL\n.\nThis will reduce memory usage and can improve performance on some systems.\n\n\nThe default behaviour \nbefore\n function call is \nfalse\n, meaning the libvips access method is not sequential.\n\n\n\u53c2\u6570\n \n\n\n\n\nsequentialRead\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp", 
            "title": "\u8f93\u5165"
        }, 
        {
            "location": "/api-input/#clone", 
            "text": "Take a \"snapshot\" of the Sharp instance, returning a new instance.\nCloned instances inherit the input of their parent instance.\nThis allows multiple output Streams and therefore multiple processing pipelines to share a single input Stream.  \u793a\u4f8b    const pipeline = sharp().rotate();\npipeline.clone().resize(800, 600).pipe(firstWritableStream);\npipeline.clone().extract({ left: 20, top: 20, width: 100, height: 100 }).pipe(secondWritableStream);\nreadableStream.pipe(pipeline);\n// firstWritableStream receives auto-rotated, resized readableStream\n// secondWritableStream receives auto-rotated, extracted region of readableStream  \u8fd4\u56de   Sharp", 
            "title": "clone"
        }, 
        {
            "location": "/api-input/#metadata", 
            "text": "Fast access to (uncached) image metadata without decoding any compressed image data.\nA Promises/A+ promise is returned when  callback  is not provided.   format : Name of decoder used to decompress image data e.g.  jpeg ,  png ,  webp ,  gif ,  svg  width : Number of pixels wide  height : Number of pixels high  space : Name of colour space interpretation e.g.  srgb ,  rgb ,  cmyk ,  lab ,  b-w   ...  channels : Number of bands e.g.  3  for sRGB,  4  for CMYK  depth : Name of pixel depth format e.g.  uchar ,  char ,  ushort ,  float   ...  density : Number of pixels per inch (DPI), if present  hasProfile : Boolean indicating the presence of an embedded ICC profile  hasAlpha : Boolean indicating the presence of an alpha transparency channel  orientation : Number value of the EXIF Orientation header, if present  exif : Buffer containing raw EXIF data, if present  icc : Buffer containing raw  ICC  profile data, if present   \u53c2\u6570     callback   Function ?  called with the arguments  (err, metadata)   \u793a\u4f8b    const image = sharp(inputJpg);\nimage\n  .metadata()\n  .then(function(metadata) {\n    return image\n      .resize(Math.round(metadata.width / 2))\n      .webp()\n      .toBuffer();\n  })\n  .then(function(data) {\n    // data contains a WebP image half the width and height of the original JPEG\n  });  \u8fd4\u56de   ( Promise Object  | Sharp)", 
            "title": "metadata"
        }, 
        {
            "location": "/api-input/#stats", 
            "text": "Access to pixel-derived image statistics for every channel in the image.\nA Promise is returned when  callback  is not provided.   channels : Array of channel statistics for each channel in the image. Each channel statistic contains  min  (minimum value in the channel)  max  (maximum value in the channel)  sum  (sum of all values in a channel)  squaresSum  (sum of squared values in a channel)  mean  (mean of the values in a channel)  stdev  (standard deviation for the values in a channel)  minX  (x-coordinate of one of the pixel where the minimum lies)  minY  (y-coordinate of one of the pixel where the minimum lies)  maxX  (x-coordinate of one of the pixel where the maximum lies)  maxY  (y-coordinate of one of the pixel where the maximum lies)    isOpaque : Value to identify if the image is opaque or transparent, based on the presence and use of alpha channel   \u53c2\u6570     callback   Function ?  called with the arguments  (err, stats)   \u793a\u4f8b    const image = sharp(inputJpg);\nimage\n  .stats()\n  .then(function(stats) {\n     // stats contains the channel-wise statistics array and the isOpaque value\n  });  \u8fd4\u56de   Promise Object", 
            "title": "stats"
        }, 
        {
            "location": "/api-input/#limitinputpixels", 
            "text": "Do not process input images where the number of pixels (width _ height) exceeds this limit.\nAssumes image dimensions contained in the input metadata can be trusted.\nThe default limit is 268402689 (0x3FFF _ 0x3FFF) pixels.  \u53c2\u6570      limit   ( Number  |  Boolean )  an integral Number of pixels, zero or false to remove limit, true to use default limit.    Throws  Error  Invalid limit    \u8fd4\u56de   Sharp", 
            "title": "limitInputPixels"
        }, 
        {
            "location": "/api-input/#sequentialread", 
            "text": "An advanced setting that switches the libvips access method to  VIPS_ACCESS_SEQUENTIAL .\nThis will reduce memory usage and can improve performance on some systems.  The default behaviour  before  function call is  false , meaning the libvips access method is not sequential.  \u53c2\u6570     sequentialRead   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "sequentialRead"
        }, 
        {
            "location": "/api-output/", 
            "text": "toFile\n\n\nWrite output image data to a file.\n\n\nIf an explicit output format is not selected, it will be inferred from the extension,\nwith JPEG, PNG, WebP, TIFF, DZI, and libvips' V format supported.\nNote that raw pixel data is only supported for buffer output.\n\n\nA \nPromise\n is returned when \ncallback\n is not provided.\n\n\n\u53c2\u6570\n \n\n\n\n\nfileOut\n \nString\n the path to write the image data to.\n\n\n\n\ncallback\n \nFunction\n?\n called on completion with two arguments \n(err, info)\n.\n    \ninfo\n contains the output image \nformat\n, \nsize\n (bytes), \nwidth\n, \nheight\n,\n    \nchannels\n and \npremultiplied\n (indicating if premultiplication was used).\n    When using a crop strategy also contains \ncropOffsetLeft\n and \ncropOffsetTop\n.\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nPromise\nObject\n when no callback is provided\n\n\ntoBuffer\n\n\nWrite output to a Buffer.\nJPEG, PNG, WebP, TIFF and RAW output are supported.\nBy default, the format will match the input image, except GIF and SVG input which become PNG output.\n\n\ncallback\n, if present, gets three arguments \n(err, data, info)\n where:\n\n\n\n\nerr\n is an error, if any.\n\n\ndata\n is the output image data.\n\n\ninfo\n contains the output image \nformat\n, \nsize\n (bytes), \nwidth\n, \nheight\n,\n    \nchannels\n and \npremultiplied\n (indicating if premultiplication was used).\n    When using a crop strategy also contains \ncropOffsetLeft\n and \ncropOffsetTop\n.\n\n\n\n\nA \nPromise\n is returned when \ncallback\n is not provided.\n\n\n\u53c2\u6570\n \n\n\n\n\noptions\n \nObject\n?\n \n\n\noptions.resolveWithObject\n \nBoolean\n?\n Resolve the Promise with an Object containing \ndata\n and \ninfo\n properties instead of resolving only with \ndata\n.\n\n\n\n\n\n\ncallback\n \nFunction\n?\n \n\n\n\n\n\u8fd4\u56de\n \nPromise\nBuffer\n when no callback is provided\n\n\nwithMetadata\n\n\nInclude all metadata (EXIF, XMP, IPTC) from the input image in the output image.\nThe default behaviour, when \nwithMetadata\n is not used, is to strip all metadata and convert to the device-independent sRGB colour space.\nThis will also convert to and add a web-friendly sRGB ICC profile.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\nwithMetadata\n \nObject\n?\n \n\n\n\n\nwithMetadata.orientation\n \nNumber\n?\n value between 1 and 8, used to update the EXIF \nOrientation\n tag.\n\n\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\njpeg\n\n\nUse these JPEG options for output image.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\noptions\n \nObject\n?\n output options\n\n\n\n\noptions.quality\n \nNumber\n quality, integer 1-100 (optional, default \n80\n)\n\n\noptions.progressive\n \nBoolean\n use progressive (interlace) scan (optional, default \nfalse\n)\n\n\noptions.chromaSubsampling\n \nString\n set to '4:4:4' to prevent chroma subsampling when quality \n= 90 (optional, default \n'4:2:0'\n)\n\n\noptions.trellisQuantisation\n \nBoolean\n apply trellis quantisation, requires mozjpeg (optional, default \nfalse\n)\n\n\noptions.overshootDeringing\n \nBoolean\n apply overshoot deringing, requires mozjpeg (optional, default \nfalse\n)\n\n\noptions.optimiseScans\n \nBoolean\n optimise progressive scans, forces progressive, requires mozjpeg (optional, default \nfalse\n)\n\n\noptions.optimizeScans\n \nBoolean\n alternative spelling of optimiseScans (optional, default \nfalse\n)\n\n\noptions.force\n \nBoolean\n force JPEG output, otherwise attempt to use input format (optional, default \ntrue\n)\n\n\n\n\n\n\n\n\nThrows \nError\n Invalid options\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\npng\n\n\nUse these PNG options for output image.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\noptions\n \nObject\n?\n \n\n\n\n\noptions.progressive\n \nBoolean\n use progressive (interlace) scan (optional, default \nfalse\n)\n\n\noptions.compressionLevel\n \nNumber\n zlib compression level, 0-9 (optional, default \n9\n)\n\n\noptions.adaptiveFiltering\n \nBoolean\n use adaptive row filtering (optional, default \nfalse\n)\n\n\noptions.force\n \nBoolean\n force PNG output, otherwise attempt to use input format (optional, default \ntrue\n)\n\n\n\n\n\n\n\n\nThrows \nError\n Invalid options\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nwebp\n\n\nUse these WebP options for output image.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\noptions\n \nObject\n?\n output options\n\n\n\n\noptions.quality\n \nNumber\n quality, integer 1-100 (optional, default \n80\n)\n\n\noptions.alphaQuality\n \nNumber\n quality of alpha layer, integer 0-100 (optional, default \n100\n)\n\n\noptions.lossless\n \nBoolean\n use lossless compression mode (optional, default \nfalse\n)\n\n\noptions.nearLossless\n \nBoolean\n use near_lossless compression mode (optional, default \nfalse\n)\n\n\noptions.force\n \nBoolean\n force WebP output, otherwise attempt to use input format (optional, default \ntrue\n)\n\n\n\n\n\n\n\n\nThrows \nError\n Invalid options\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ntiff\n\n\nUse these TIFF options for output image.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\noptions\n \nObject\n?\n output options\n\n\n\n\noptions.quality\n \nNumber\n quality, integer 1-100 (optional, default \n80\n)\n\n\noptions.force\n \nBoolean\n force TIFF output, otherwise attempt to use input format (optional, default \ntrue\n)\n\n\noptions.compression\n \nBoolean\n compression options: lzw, deflate, jpeg (optional, default \n'jpeg'\n)\n\n\noptions.predictor\n \nBoolean\n compression predictor options: none, horizontal, float (optional, default \n'horizontal'\n)\n\n\noptions.xres\n \nNumber\n horizontal resolution in pixels/mm (optional, default \n1.0\n)\n\n\noptions.yres\n \nNumber\n vertical resolution in pixels/mm (optional, default \n1.0\n)\n\n\noptions.squash\n \nBoolean\n squash 8-bit images down to 1 bit (optional, default \nfalse\n)\n\n\n\n\n\n\n\n\nThrows \nError\n Invalid options\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nraw\n\n\nForce output to be raw, uncompressed uint8 pixel data.\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ntoFormat\n\n\nForce output to a given format.\n\n\n\u53c2\u6570\n \n\n\n\n\nformat\n \n(\nString\n | \nObject\n)\n as a String or an Object with an 'id' attribute\n\n\n\n\noptions\n \nObject\n output options\n\n\n\n\n\n\nThrows \nError\n unsupported format or options\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ntile\n\n\nUse tile-based deep zoom (image pyramid) output.\nSet the format and options for tile images via the \ntoFormat\n, \njpeg\n, \npng\n or \nwebp\n functions.\nUse a \n.zip\n or \n.szi\n file extension with \ntoFile\n to write to a compressed archive file format.\n\n\n\u53c2\u6570\n \n\n\n\n\ntile\n \nObject\n?\n \n\n\ntile.size\n \nNumber\n tile size in pixels, a value between 1 and 8192. (optional, default \n256\n)\n\n\ntile.overlap\n \nNumber\n tile overlap in pixels, a value between 0 and 8192. (optional, default \n0\n)\n\n\ntile.container\n \nString\n tile container, with value \nfs\n (filesystem) or \nzip\n (compressed file). (optional, default \n'fs'\n)\n\n\ntile.layout\n \nString\n filesystem layout, possible values are \ndz\n, \nzoomify\n or \ngoogle\n. (optional, default \n'dz'\n)\n\n\n\n\n\n\n\n\nExamples\n\n\nsharp('input.tiff')\n  .png()\n  .tile({\n    size: 512\n  })\n  .toFile('output.dz', function(err, info) {\n    // output.dzi is the Deep Zoom XML definition\n    // output_files contains 512x512 tiles grouped by zoom level\n  });\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp", 
            "title": "\u8f93\u51fa"
        }, 
        {
            "location": "/api-output/#tofile", 
            "text": "Write output image data to a file.  If an explicit output format is not selected, it will be inferred from the extension,\nwith JPEG, PNG, WebP, TIFF, DZI, and libvips' V format supported.\nNote that raw pixel data is only supported for buffer output.  A  Promise  is returned when  callback  is not provided.  \u53c2\u6570     fileOut   String  the path to write the image data to.   callback   Function ?  called on completion with two arguments  (err, info) .\n     info  contains the output image  format ,  size  (bytes),  width ,  height ,\n     channels  and  premultiplied  (indicating if premultiplication was used).\n    When using a crop strategy also contains  cropOffsetLeft  and  cropOffsetTop .    Throws  Error  Invalid parameters    \u8fd4\u56de   Promise Object  when no callback is provided", 
            "title": "toFile"
        }, 
        {
            "location": "/api-output/#tobuffer", 
            "text": "Write output to a Buffer.\nJPEG, PNG, WebP, TIFF and RAW output are supported.\nBy default, the format will match the input image, except GIF and SVG input which become PNG output.  callback , if present, gets three arguments  (err, data, info)  where:   err  is an error, if any.  data  is the output image data.  info  contains the output image  format ,  size  (bytes),  width ,  height ,\n     channels  and  premultiplied  (indicating if premultiplication was used).\n    When using a crop strategy also contains  cropOffsetLeft  and  cropOffsetTop .   A  Promise  is returned when  callback  is not provided.  \u53c2\u6570     options   Object ?    options.resolveWithObject   Boolean ?  Resolve the Promise with an Object containing  data  and  info  properties instead of resolving only with  data .    callback   Function ?     \u8fd4\u56de   Promise Buffer  when no callback is provided", 
            "title": "toBuffer"
        }, 
        {
            "location": "/api-output/#withmetadata", 
            "text": "Include all metadata (EXIF, XMP, IPTC) from the input image in the output image.\nThe default behaviour, when  withMetadata  is not used, is to strip all metadata and convert to the device-independent sRGB colour space.\nThis will also convert to and add a web-friendly sRGB ICC profile.  \u53c2\u6570      withMetadata   Object ?     withMetadata.orientation   Number ?  value between 1 and 8, used to update the EXIF  Orientation  tag.     Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "withMetadata"
        }, 
        {
            "location": "/api-output/#jpeg", 
            "text": "Use these JPEG options for output image.  \u53c2\u6570      options   Object ?  output options   options.quality   Number  quality, integer 1-100 (optional, default  80 )  options.progressive   Boolean  use progressive (interlace) scan (optional, default  false )  options.chromaSubsampling   String  set to '4:4:4' to prevent chroma subsampling when quality  = 90 (optional, default  '4:2:0' )  options.trellisQuantisation   Boolean  apply trellis quantisation, requires mozjpeg (optional, default  false )  options.overshootDeringing   Boolean  apply overshoot deringing, requires mozjpeg (optional, default  false )  options.optimiseScans   Boolean  optimise progressive scans, forces progressive, requires mozjpeg (optional, default  false )  options.optimizeScans   Boolean  alternative spelling of optimiseScans (optional, default  false )  options.force   Boolean  force JPEG output, otherwise attempt to use input format (optional, default  true )     Throws  Error  Invalid options    \u8fd4\u56de   Sharp", 
            "title": "jpeg"
        }, 
        {
            "location": "/api-output/#png", 
            "text": "Use these PNG options for output image.  \u53c2\u6570      options   Object ?     options.progressive   Boolean  use progressive (interlace) scan (optional, default  false )  options.compressionLevel   Number  zlib compression level, 0-9 (optional, default  9 )  options.adaptiveFiltering   Boolean  use adaptive row filtering (optional, default  false )  options.force   Boolean  force PNG output, otherwise attempt to use input format (optional, default  true )     Throws  Error  Invalid options    \u8fd4\u56de   Sharp", 
            "title": "png"
        }, 
        {
            "location": "/api-output/#webp", 
            "text": "Use these WebP options for output image.  \u53c2\u6570      options   Object ?  output options   options.quality   Number  quality, integer 1-100 (optional, default  80 )  options.alphaQuality   Number  quality of alpha layer, integer 0-100 (optional, default  100 )  options.lossless   Boolean  use lossless compression mode (optional, default  false )  options.nearLossless   Boolean  use near_lossless compression mode (optional, default  false )  options.force   Boolean  force WebP output, otherwise attempt to use input format (optional, default  true )     Throws  Error  Invalid options    \u8fd4\u56de   Sharp", 
            "title": "webp"
        }, 
        {
            "location": "/api-output/#tiff", 
            "text": "Use these TIFF options for output image.  \u53c2\u6570      options   Object ?  output options   options.quality   Number  quality, integer 1-100 (optional, default  80 )  options.force   Boolean  force TIFF output, otherwise attempt to use input format (optional, default  true )  options.compression   Boolean  compression options: lzw, deflate, jpeg (optional, default  'jpeg' )  options.predictor   Boolean  compression predictor options: none, horizontal, float (optional, default  'horizontal' )  options.xres   Number  horizontal resolution in pixels/mm (optional, default  1.0 )  options.yres   Number  vertical resolution in pixels/mm (optional, default  1.0 )  options.squash   Boolean  squash 8-bit images down to 1 bit (optional, default  false )     Throws  Error  Invalid options    \u8fd4\u56de   Sharp", 
            "title": "tiff"
        }, 
        {
            "location": "/api-output/#raw", 
            "text": "Force output to be raw, uncompressed uint8 pixel data.  \u8fd4\u56de   Sharp", 
            "title": "raw"
        }, 
        {
            "location": "/api-output/#toformat", 
            "text": "Force output to a given format.  \u53c2\u6570     format   ( String  |  Object )  as a String or an Object with an 'id' attribute   options   Object  output options    Throws  Error  unsupported format or options    \u8fd4\u56de   Sharp", 
            "title": "toFormat"
        }, 
        {
            "location": "/api-output/#tile", 
            "text": "Use tile-based deep zoom (image pyramid) output.\nSet the format and options for tile images via the  toFormat ,  jpeg ,  png  or  webp  functions.\nUse a  .zip  or  .szi  file extension with  toFile  to write to a compressed archive file format.  \u53c2\u6570     tile   Object ?    tile.size   Number  tile size in pixels, a value between 1 and 8192. (optional, default  256 )  tile.overlap   Number  tile overlap in pixels, a value between 0 and 8192. (optional, default  0 )  tile.container   String  tile container, with value  fs  (filesystem) or  zip  (compressed file). (optional, default  'fs' )  tile.layout   String  filesystem layout, possible values are  dz ,  zoomify  or  google . (optional, default  'dz' )     Examples  sharp('input.tiff')\n  .png()\n  .tile({\n    size: 512\n  })\n  .toFile('output.dz', function(err, info) {\n    // output.dzi is the Deep Zoom XML definition\n    // output_files contains 512x512 tiles grouped by zoom level\n  });   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "tile"
        }, 
        {
            "location": "/api-resize/", 
            "text": "resize\n\n\nResize image to \nwidth\n x \nheight\n.\nBy default, the resized image is centre cropped to the exact size specified.\n\n\nPossible kernels are:\n\n\n\n\nnearest\n: Use \nnearest neighbour interpolation\n.\n\n\ncubic\n: Use a \nCatmull-Rom spline\n.\n\n\nlanczos2\n: Use a \nLanczos kernel\n with \na=2\n.\n\n\nlanczos3\n: Use a Lanczos kernel with \na=3\n (the default).\n\n\n\n\n\u53c2\u6570\n \n\n\n\n\nwidth\n \nNumber\n?\n pixels wide the resultant image should be. Use \nnull\n or \nundefined\n to auto-scale the width to match the height.\n\n\nheight\n \nNumber\n?\n pixels high the resultant image should be. Use \nnull\n or \nundefined\n to auto-scale the height to match the width.\n\n\noptions\n \nObject\n?\n \n\n\noptions.kernel\n \nString\n the kernel to use for image reduction. (optional, default \n'lanczos3'\n)\n\n\noptions.fastShrinkOnLoad\n \nBoolean\n take greater advantage of the JPEG and WebP shrink-on-load feature, which can lead to a slight moir\u00e9 pattern on some images. (optional, default \ntrue\n)\n\n\n\n\n\n\n\n\n\u793a\u4f8b\n \n\n\nsharp(inputBuffer)\n  .resize(200, 300, {\n    kernel: sharp.kernel.nearest\n  })\n  .background('white')\n  .embed()\n  .toFile('output.tiff')\n  .then(function() {\n    // output.tiff is a 200 pixels wide and 300 pixels high image\n    // containing a nearest-neighbour scaled version, embedded on a white canvas,\n    // of the image data in inputBuffer\n  });\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ncrop\n\n\nCrop the resized image to the exact size specified, the default behaviour.\n\n\nPossible attributes of the optional \nsharp.gravity\n are \nnorth\n, \nnortheast\n, \neast\n, \nsoutheast\n, \nsouth\n,\n\nsouthwest\n, \nwest\n, \nnorthwest\n, \ncenter\n and \ncentre\n.\n\n\nThe experimental strategy-based approach resizes so one dimension is at its target length\nthen repeatedly ranks edge regions, discarding the edge with the lowest score based on the selected strategy.\n\n\n\n\nentropy\n: focus on the region with the highest \nShannon entropy\n.\n\n\nattention\n: focus on the region with the highest luminance frequency, colour saturation and presence of skin tones.\n\n\n\n\n\u53c2\u6570\n \n\n\n\n\ncrop\n \nString\n A member of \nsharp.gravity\n to crop to an edge/corner or \nsharp.strategy\n to crop dynamically. (optional, default \n'centre'\n)\n\n\n\n\n\u793a\u4f8b\n \n\n\nconst transformer = sharp()\n  .resize(200, 200)\n  .crop(sharp.strategy.entropy)\n  .on('error', function(err) {\n    console.log(err);\n  });\n// Read image data from readableStream\n// Write 200px square auto-cropped image data to writableStream\nreadableStream.pipe(transformer).pipe(writableStream);\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nembed\n\n\nPreserving aspect ratio, resize the image to the maximum \nwidth\n or \nheight\n specified\nthen embed on a background of the exact \nwidth\n and \nheight\n specified.\n\n\nIf the background contains an alpha value then WebP and PNG format output images will\ncontain an alpha channel, even when the input image does not.\n\n\n\u53c2\u6570\n \n\n\n\n\nembed\n \nString\n A member of \nsharp.gravity\n to embed to an edge/corner. (optional, default \n'centre'\n)\n\n\n\n\n\u793a\u4f8b\n \n\n\nsharp('input.gif')\n  .resize(200, 300)\n  .background({r: 0, g: 0, b: 0, alpha: 0})\n  .embed()\n  .toFormat(sharp.format.webp)\n  .toBuffer(function(err, outputBuffer) {\n    if (err) {\n      throw err;\n    }\n    // outputBuffer contains WebP image data of a 200 pixels wide and 300 pixels high\n    // containing a scaled version, embedded on a transparent canvas, of input.gif\n  });\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nmax\n\n\nPreserving aspect ratio, resize the image to be as large as possible\nwhile ensuring its dimensions are less than or equal to the \nwidth\n and \nheight\n specified.\n\n\nBoth \nwidth\n and \nheight\n must be provided via \nresize\n otherwise the behaviour will default to \ncrop\n.\n\n\n\u793a\u4f8b\n \n\n\nsharp(inputBuffer)\n  .resize(200, 200)\n  .max()\n  .toFormat('jpeg')\n  .toBuffer()\n  .then(function(outputBuffer) {\n    // outputBuffer contains JPEG image data no wider than 200 pixels and no higher\n    // than 200 pixels regardless of the inputBuffer image dimensions\n  });\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nmin\n\n\nPreserving aspect ratio, resize the image to be as small as possible\nwhile ensuring its dimensions are greater than or equal to the \nwidth\n and \nheight\n specified.\n\n\nBoth \nwidth\n and \nheight\n must be provided via \nresize\n otherwise the behaviour will default to \ncrop\n.\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nignoreAspectRatio\n\n\nIgnoring the aspect ratio of the input, stretch the image to\nthe exact \nwidth\n and/or \nheight\n provided via \nresize\n.\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nwithoutEnlargement\n\n\nDo not enlarge the output image if the input image width \nor\n height are already less than the required dimensions.\nThis is equivalent to GraphicsMagick's \n geometry option:\n\"\nchange the dimensions of the image only if its width or height exceeds the geometry specification\n\".\n\n\nThe default behaviour \nbefore\n function call is \nfalse\n, meaning the image will be enlarged.\n\n\n\u53c2\u6570\n \n\n\n\n\nwithoutEnlargement\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp", 
            "title": "\u8c03\u6574\u56fe\u7247\u5927\u5c0f"
        }, 
        {
            "location": "/api-resize/#resize", 
            "text": "Resize image to  width  x  height .\nBy default, the resized image is centre cropped to the exact size specified.  Possible kernels are:   nearest : Use  nearest neighbour interpolation .  cubic : Use a  Catmull-Rom spline .  lanczos2 : Use a  Lanczos kernel  with  a=2 .  lanczos3 : Use a Lanczos kernel with  a=3  (the default).   \u53c2\u6570     width   Number ?  pixels wide the resultant image should be. Use  null  or  undefined  to auto-scale the width to match the height.  height   Number ?  pixels high the resultant image should be. Use  null  or  undefined  to auto-scale the height to match the width.  options   Object ?    options.kernel   String  the kernel to use for image reduction. (optional, default  'lanczos3' )  options.fastShrinkOnLoad   Boolean  take greater advantage of the JPEG and WebP shrink-on-load feature, which can lead to a slight moir\u00e9 pattern on some images. (optional, default  true )     \u793a\u4f8b    sharp(inputBuffer)\n  .resize(200, 300, {\n    kernel: sharp.kernel.nearest\n  })\n  .background('white')\n  .embed()\n  .toFile('output.tiff')\n  .then(function() {\n    // output.tiff is a 200 pixels wide and 300 pixels high image\n    // containing a nearest-neighbour scaled version, embedded on a white canvas,\n    // of the image data in inputBuffer\n  });   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "resize"
        }, 
        {
            "location": "/api-resize/#crop", 
            "text": "Crop the resized image to the exact size specified, the default behaviour.  Possible attributes of the optional  sharp.gravity  are  north ,  northeast ,  east ,  southeast ,  south , southwest ,  west ,  northwest ,  center  and  centre .  The experimental strategy-based approach resizes so one dimension is at its target length\nthen repeatedly ranks edge regions, discarding the edge with the lowest score based on the selected strategy.   entropy : focus on the region with the highest  Shannon entropy .  attention : focus on the region with the highest luminance frequency, colour saturation and presence of skin tones.   \u53c2\u6570     crop   String  A member of  sharp.gravity  to crop to an edge/corner or  sharp.strategy  to crop dynamically. (optional, default  'centre' )   \u793a\u4f8b    const transformer = sharp()\n  .resize(200, 200)\n  .crop(sharp.strategy.entropy)\n  .on('error', function(err) {\n    console.log(err);\n  });\n// Read image data from readableStream\n// Write 200px square auto-cropped image data to writableStream\nreadableStream.pipe(transformer).pipe(writableStream);   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "crop"
        }, 
        {
            "location": "/api-resize/#embed", 
            "text": "Preserving aspect ratio, resize the image to the maximum  width  or  height  specified\nthen embed on a background of the exact  width  and  height  specified.  If the background contains an alpha value then WebP and PNG format output images will\ncontain an alpha channel, even when the input image does not.  \u53c2\u6570     embed   String  A member of  sharp.gravity  to embed to an edge/corner. (optional, default  'centre' )   \u793a\u4f8b    sharp('input.gif')\n  .resize(200, 300)\n  .background({r: 0, g: 0, b: 0, alpha: 0})\n  .embed()\n  .toFormat(sharp.format.webp)\n  .toBuffer(function(err, outputBuffer) {\n    if (err) {\n      throw err;\n    }\n    // outputBuffer contains WebP image data of a 200 pixels wide and 300 pixels high\n    // containing a scaled version, embedded on a transparent canvas, of input.gif\n  });   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "embed"
        }, 
        {
            "location": "/api-resize/#max", 
            "text": "Preserving aspect ratio, resize the image to be as large as possible\nwhile ensuring its dimensions are less than or equal to the  width  and  height  specified.  Both  width  and  height  must be provided via  resize  otherwise the behaviour will default to  crop .  \u793a\u4f8b    sharp(inputBuffer)\n  .resize(200, 200)\n  .max()\n  .toFormat('jpeg')\n  .toBuffer()\n  .then(function(outputBuffer) {\n    // outputBuffer contains JPEG image data no wider than 200 pixels and no higher\n    // than 200 pixels regardless of the inputBuffer image dimensions\n  });  \u8fd4\u56de   Sharp", 
            "title": "max"
        }, 
        {
            "location": "/api-resize/#min", 
            "text": "Preserving aspect ratio, resize the image to be as small as possible\nwhile ensuring its dimensions are greater than or equal to the  width  and  height  specified.  Both  width  and  height  must be provided via  resize  otherwise the behaviour will default to  crop .  \u8fd4\u56de   Sharp", 
            "title": "min"
        }, 
        {
            "location": "/api-resize/#ignoreaspectratio", 
            "text": "Ignoring the aspect ratio of the input, stretch the image to\nthe exact  width  and/or  height  provided via  resize .  \u8fd4\u56de   Sharp", 
            "title": "ignoreAspectRatio"
        }, 
        {
            "location": "/api-resize/#withoutenlargement", 
            "text": "Do not enlarge the output image if the input image width  or  height are already less than the required dimensions.\nThis is equivalent to GraphicsMagick's   geometry option:\n\" change the dimensions of the image only if its width or height exceeds the geometry specification \".  The default behaviour  before  function call is  false , meaning the image will be enlarged.  \u53c2\u6570     withoutEnlargement   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "withoutEnlargement"
        }, 
        {
            "location": "/api-composite/", 
            "text": "overlayWith\n\n\nOverlay (composite) an image over the processed (resized, extracted etc.) image.\n\n\nThe overlay image must be the same size or smaller than the processed image.\nIf both \ntop\n and \nleft\n options are provided, they take precedence over \ngravity\n.\n\n\nIf the overlay image contains an alpha channel then composition with premultiplication will occur.\n\n\n\u53c2\u6570\n \n\n\n\n\noverlay\n \n(\nBuffer\n | \nString\n)\n Buffer containing image data or String containing the path to an image file.\n\n\noptions\n \nObject\n?\n \n\n\noptions.gravity\n \nString\n gravity at which to place the overlay. (optional, default \n'centre'\n)\n\n\noptions.top\n \nNumber\n?\n the pixel offset from the top edge.\n\n\noptions.left\n \nNumber\n?\n the pixel offset from the left edge.\n\n\noptions.tile\n \nBoolean\n set to true to repeat the overlay image across the entire image with the given \ngravity\n. (optional, default \nfalse\n)\n\n\noptions.cutout\n \nBoolean\n set to true to apply only the alpha channel of the overlay image to the input image, giving the appearance of one image being cut out of another. (optional, default \nfalse\n)\n\n\noptions.density\n \nNumber\n integral number representing the DPI for vector overlay image. (optional, default \n72\n)\n\n\noptions.raw\n \nObject\n?\n describes overlay when using raw pixel data.\n\n\noptions.raw.width\n \nNumber\n?\n \n\n\noptions.raw.height\n \nNumber\n?\n \n\n\noptions.raw.channels\n \nNumber\n?\n \n\n\n\n\n\n\noptions.create\n \nObject\n?\n describes a blank overlay to be created.\n\n\noptions.create.width\n \nNumber\n?\n \n\n\noptions.create.height\n \nNumber\n?\n \n\n\noptions.create.channels\n \nNumber\n?\n 3-4\n\n\noptions.create.background\n \n(\nString\n | \nObject\n)?\n parsed by the \ncolor\n module to extract values for red, green, blue and alpha.\n\n\n\n\n\n\n\n\n\n\n\n\n\u793a\u4f8b\n \n\n\nsharp('input.png')\n  .rotate(180)\n  .resize(300)\n  .flatten()\n  .background('#ff6600')\n  .overlayWith('overlay.png', { gravity: sharp.gravity.southeast } )\n  .sharpen()\n  .withMetadata()\n  .quality(90)\n  .webp()\n  .toBuffer()\n  .then(function(outputBuffer) {\n    // outputBuffer contains upside down, 300px wide, alpha channel flattened\n    // onto orange background, composited with overlay.png with SE gravity,\n    // sharpened, with metadata, 90% quality WebP image data. Phew!\n  });\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp", 
            "title": "\u5408\u6210\u56fe\u50cf"
        }, 
        {
            "location": "/api-composite/#overlaywith", 
            "text": "Overlay (composite) an image over the processed (resized, extracted etc.) image.  The overlay image must be the same size or smaller than the processed image.\nIf both  top  and  left  options are provided, they take precedence over  gravity .  If the overlay image contains an alpha channel then composition with premultiplication will occur.  \u53c2\u6570     overlay   ( Buffer  |  String )  Buffer containing image data or String containing the path to an image file.  options   Object ?    options.gravity   String  gravity at which to place the overlay. (optional, default  'centre' )  options.top   Number ?  the pixel offset from the top edge.  options.left   Number ?  the pixel offset from the left edge.  options.tile   Boolean  set to true to repeat the overlay image across the entire image with the given  gravity . (optional, default  false )  options.cutout   Boolean  set to true to apply only the alpha channel of the overlay image to the input image, giving the appearance of one image being cut out of another. (optional, default  false )  options.density   Number  integral number representing the DPI for vector overlay image. (optional, default  72 )  options.raw   Object ?  describes overlay when using raw pixel data.  options.raw.width   Number ?    options.raw.height   Number ?    options.raw.channels   Number ?      options.create   Object ?  describes a blank overlay to be created.  options.create.width   Number ?    options.create.height   Number ?    options.create.channels   Number ?  3-4  options.create.background   ( String  |  Object )?  parsed by the  color  module to extract values for red, green, blue and alpha.       \u793a\u4f8b    sharp('input.png')\n  .rotate(180)\n  .resize(300)\n  .flatten()\n  .background('#ff6600')\n  .overlayWith('overlay.png', { gravity: sharp.gravity.southeast } )\n  .sharpen()\n  .withMetadata()\n  .quality(90)\n  .webp()\n  .toBuffer()\n  .then(function(outputBuffer) {\n    // outputBuffer contains upside down, 300px wide, alpha channel flattened\n    // onto orange background, composited with overlay.png with SE gravity,\n    // sharpened, with metadata, 90% quality WebP image data. Phew!\n  });   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "overlayWith"
        }, 
        {
            "location": "/api-operation/", 
            "text": "rotate\n\n\nRotate the output image by either an explicit angle\nor auto-orient based on the EXIF \nOrientation\n tag.\n\n\nIf an angle is provided, it is converted to a valid 90/180/270deg rotation.\nFor example, \n-450\n will produce a 270deg rotation.\n\n\nIf no angle is provided, it is determined from the EXIF data.\nMirroring is supported and may infer the use of a flip operation.\n\n\nThe use of \nrotate\n implies the removal of the EXIF \nOrientation\n tag, if any.\n\n\nMethod order is important when both rotating and extracting regions,\nfor example \nrotate(x).extract(y)\n will produce a different result to \nextract(y).rotate(x)\n.\n\n\n\u53c2\u6570\n \n\n\n\n\nangle\n \nNumber\n angle of rotation, must be a multiple of 90. (optional, default \nauto\n)\n\n\n\n\n\u793a\u4f8b\n \n\n\nconst pipeline = sharp()\n  .rotate()\n  .resize(null, 200)\n  .toBuffer(function (err, outputBuffer, info) {\n    // outputBuffer contains 200px high JPEG image data,\n    // auto-rotated using EXIF Orientation tag\n    // info.width and info.height contain the dimensions of the resized image\n  });\nreadableStream.pipe(pipeline);\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nextract\n\n\nExtract a region of the image.\n\n\n\n\nUse \nextract\n before \nresize\n for pre-resize extraction.\n\n\nUse \nextract\n after \nresize\n for post-resize extraction.\n\n\nUse \nextract\n before and after for both.\n\n\n\n\n\u53c2\u6570\n \n\n\n\n\noptions\n \nObject\n \n\n\noptions.left\n \nNumber\n zero-indexed offset from left edge\n\n\noptions.top\n \nNumber\n zero-indexed offset from top edge\n\n\noptions.width\n \nNumber\n dimension of extracted image\n\n\noptions.height\n \nNumber\n dimension of extracted image\n\n\n\n\n\n\n\n\n\u793a\u4f8b\n \n\n\nsharp(input)\n  .extract({ left: left, top: top, width: width, height: height })\n  .toFile(output, function(err) {\n    // Extract a region of the input image, saving in the same format.\n  });\n\n\n\n\nsharp(input)\n  .extract({ left: leftOffsetPre, top: topOffsetPre, width: widthPre, height: heightPre })\n  .resize(width, height)\n  .extract({ left: leftOffsetPost, top: topOffsetPost, width: widthPost, height: heightPost })\n  .toFile(output, function(err) {\n    // Extract a region, resize, then extract from the resized image\n  });\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nflip\n\n\nFlip the image about the vertical Y axis. This always occurs after rotation, if any.\nThe use of \nflip\n implies the removal of the EXIF \nOrientation\n tag, if any.\n\n\n\u53c2\u6570\n \n\n\n\n\nflip\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nflop\n\n\nFlop the image about the horizontal X axis. This always occurs after rotation, if any.\nThe use of \nflop\n implies the removal of the EXIF \nOrientation\n tag, if any.\n\n\n\u53c2\u6570\n \n\n\n\n\nflop\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nsharpen\n\n\nSharpen the image.\nWhen used without parameters, performs a fast, mild sharpen of the output image.\nWhen a \nsigma\n is provided, performs a slower, more accurate sharpen of the L channel in the LAB colour space.\nSeparate control over the level of sharpening in \"flat\" and \"jagged\" areas is available.\n\n\n\u53c2\u6570\n \n\n\n\n\nsigma\n \nNumber\n?\n the sigma of the Gaussian mask, where \nsigma = 1 + radius / 2\n.\n\n\nflat\n \nNumber\n the level of sharpening to apply to \"flat\" areas. (optional, default \n1.0\n)\n\n\n\n\njagged\n \nNumber\n the level of sharpening to apply to \"jagged\" areas. (optional, default \n2.0\n)\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nblur\n\n\nBlur the image.\nWhen used without parameters, performs a fast, mild blur of the output image.\nWhen a \nsigma\n is provided, performs a slower, more accurate Gaussian blur.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\nsigma\n \nNumber\n?\n a value between 0.3 and 1000 representing the sigma of the Gaussian mask, where \nsigma = 1 + radius / 2\n.\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nextend\n\n\nExtends/pads the edges of the image with the colour provided to the \nbackground\n method.\nThis operation will always occur after resizing and extraction, if any.\n\n\n\u53c2\u6570\n \n\n\n\n\nextend\n \n(\nNumber\n | \nObject\n)\n single pixel count to add to all edges or an Object with per-edge counts\n\n\nextend.top\n \nNumber\n?\n \n\n\nextend.left\n \nNumber\n?\n \n\n\nextend.bottom\n \nNumber\n?\n \n\n\nextend.right\n \nNumber\n?\n \n\n\n\n\n\n\n\n\n\u793a\u4f8b\n \n\n\n// Resize to 140 pixels wide, then add 10 transparent pixels\n// to the top, left and right edges and 20 to the bottom edge\nsharp(input)\n  .resize(140)\n  .background({r: 0, g: 0, b: 0, alpha: 0})\n  .extend({top: 10, bottom: 20, left: 10, right: 10})\n  ...\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nflatten\n\n\nMerge alpha transparency channel, if any, with \nbackground\n.\n\n\n\u53c2\u6570\n \n\n\n\n\nflatten\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ntrim\n\n\nTrim \"boring\" pixels from all edges that contain values within a percentage similarity of the top-left pixel.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\ntolerance\n \nNumber\n value between 1 and 99 representing the percentage similarity. (optional, default \n10\n)\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ngamma\n\n\nApply a gamma correction by reducing the encoding (darken) pre-resize at a factor of \n1/gamma\n\nthen increasing the encoding (brighten) post-resize at a factor of \ngamma\n.\nThis can improve the perceived brightness of a resized image in non-linear colour spaces.\nJPEG and WebP input images will not take advantage of the shrink-on-load performance optimisation\nwhen applying a gamma correction.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\ngamma\n \nNumber\n value between 1.0 and 3.0. (optional, default \n2.2\n)\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nnegate\n\n\nProduce the \"negative\" of the image.\n\n\n\u53c2\u6570\n \n\n\n\n\nnegate\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nnormalise\n\n\nEnhance output image contrast by stretching its luminance to cover the full dynamic range.\n\n\n\u53c2\u6570\n \n\n\n\n\nnormalise\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nnormalize\n\n\nAlternative spelling of normalise.\n\n\n\u53c2\u6570\n \n\n\n\n\nnormalize\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nconvolve\n\n\nConvolve the image with the specified kernel.\n\n\n\u53c2\u6570\n \n\n\n\n\nkernel\n \nObject\n \n\n\nkernel.width\n \nNumber\n width of the kernel in pixels.\n\n\nkernel.height\n \nNumber\n width of the kernel in pixels.\n\n\nkernel.kernel\n \nArray\nNumber\n Array of length \nwidth*height\n containing the kernel values.\n\n\nkernel.scale\n \nNumber\n the scale of the kernel in pixels. (optional, default \nsum\n)\n\n\nkernel.offset\n \nNumber\n the offset of the kernel in pixels. (optional, default \n0\n)\n\n\n\n\n\n\n\n\n\u793a\u4f8b\n \n\n\nsharp(input)\n  .convolve({\n    width: 3,\n    height: 3,\n    kernel: [-1, 0, 1, -2, 0, 2, -1, 0, 1]\n  })\n  .raw()\n  .toBuffer(function(err, data, info) {\n    // data contains the raw pixel data representing the convolution\n    // of the input image with the horizontal Sobel operator\n  });\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nthreshold\n\n\nAny pixel value greather than or equal to the threshold value will be set to 255, otherwise it will be set to 0.\n\n\n\u53c2\u6570\n \n\n\n\n\nthreshold\n \nNumber\n a value in the range 0-255 representing the level at which the threshold will be applied. (optional, default \n128\n)\n\n\n\n\noptions\n \nObject\n?\n \n\n\n\n\noptions.greyscale\n \nBoolean\n convert to single channel greyscale. (optional, default \ntrue\n)\n\n\noptions.grayscale\n \nBoolean\n alternative spelling for greyscale. (optional, default \ntrue\n)\n\n\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nboolean\n\n\nPerform a bitwise boolean operation with operand image.\n\n\nThis operation creates an output image where each pixel is the result of\nthe selected bitwise boolean \noperation\n between the corresponding pixels of the input images.\n\n\n\u53c2\u6570\n \n\n\n\n\noperand\n \n(\nBuffer\n | \nString\n)\n Buffer containing image data or String containing the path to an image file.\n\n\noperator\n \nString\n one of \nand\n, \nor\n or \neor\n to perform that bitwise operation, like the C logic operators \n, \n|\n and \n^\n respectively.\n\n\n\n\noptions\n \nObject\n?\n \n\n\n\n\noptions.raw\n \nObject\n?\n describes operand when using raw pixel data.\n\n\noptions.raw.width\n \nNumber\n?\n \n\n\noptions.raw.height\n \nNumber\n?\n \n\n\noptions.raw.channels\n \nNumber\n?\n \n\n\n\n\n\n\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp", 
            "title": "\u56fe\u50cf\u64cd\u4f5c"
        }, 
        {
            "location": "/api-operation/#rotate", 
            "text": "Rotate the output image by either an explicit angle\nor auto-orient based on the EXIF  Orientation  tag.  If an angle is provided, it is converted to a valid 90/180/270deg rotation.\nFor example,  -450  will produce a 270deg rotation.  If no angle is provided, it is determined from the EXIF data.\nMirroring is supported and may infer the use of a flip operation.  The use of  rotate  implies the removal of the EXIF  Orientation  tag, if any.  Method order is important when both rotating and extracting regions,\nfor example  rotate(x).extract(y)  will produce a different result to  extract(y).rotate(x) .  \u53c2\u6570     angle   Number  angle of rotation, must be a multiple of 90. (optional, default  auto )   \u793a\u4f8b    const pipeline = sharp()\n  .rotate()\n  .resize(null, 200)\n  .toBuffer(function (err, outputBuffer, info) {\n    // outputBuffer contains 200px high JPEG image data,\n    // auto-rotated using EXIF Orientation tag\n    // info.width and info.height contain the dimensions of the resized image\n  });\nreadableStream.pipe(pipeline);   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "rotate"
        }, 
        {
            "location": "/api-operation/#extract", 
            "text": "Extract a region of the image.   Use  extract  before  resize  for pre-resize extraction.  Use  extract  after  resize  for post-resize extraction.  Use  extract  before and after for both.   \u53c2\u6570     options   Object    options.left   Number  zero-indexed offset from left edge  options.top   Number  zero-indexed offset from top edge  options.width   Number  dimension of extracted image  options.height   Number  dimension of extracted image     \u793a\u4f8b    sharp(input)\n  .extract({ left: left, top: top, width: width, height: height })\n  .toFile(output, function(err) {\n    // Extract a region of the input image, saving in the same format.\n  });  sharp(input)\n  .extract({ left: leftOffsetPre, top: topOffsetPre, width: widthPre, height: heightPre })\n  .resize(width, height)\n  .extract({ left: leftOffsetPost, top: topOffsetPost, width: widthPost, height: heightPost })\n  .toFile(output, function(err) {\n    // Extract a region, resize, then extract from the resized image\n  });   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "extract"
        }, 
        {
            "location": "/api-operation/#flip", 
            "text": "Flip the image about the vertical Y axis. This always occurs after rotation, if any.\nThe use of  flip  implies the removal of the EXIF  Orientation  tag, if any.  \u53c2\u6570     flip   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "flip"
        }, 
        {
            "location": "/api-operation/#flop", 
            "text": "Flop the image about the horizontal X axis. This always occurs after rotation, if any.\nThe use of  flop  implies the removal of the EXIF  Orientation  tag, if any.  \u53c2\u6570     flop   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "flop"
        }, 
        {
            "location": "/api-operation/#sharpen", 
            "text": "Sharpen the image.\nWhen used without parameters, performs a fast, mild sharpen of the output image.\nWhen a  sigma  is provided, performs a slower, more accurate sharpen of the L channel in the LAB colour space.\nSeparate control over the level of sharpening in \"flat\" and \"jagged\" areas is available.  \u53c2\u6570     sigma   Number ?  the sigma of the Gaussian mask, where  sigma = 1 + radius / 2 .  flat   Number  the level of sharpening to apply to \"flat\" areas. (optional, default  1.0 )   jagged   Number  the level of sharpening to apply to \"jagged\" areas. (optional, default  2.0 )    Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "sharpen"
        }, 
        {
            "location": "/api-operation/#blur", 
            "text": "Blur the image.\nWhen used without parameters, performs a fast, mild blur of the output image.\nWhen a  sigma  is provided, performs a slower, more accurate Gaussian blur.  \u53c2\u6570      sigma   Number ?  a value between 0.3 and 1000 representing the sigma of the Gaussian mask, where  sigma = 1 + radius / 2 .    Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "blur"
        }, 
        {
            "location": "/api-operation/#extend", 
            "text": "Extends/pads the edges of the image with the colour provided to the  background  method.\nThis operation will always occur after resizing and extraction, if any.  \u53c2\u6570     extend   ( Number  |  Object )  single pixel count to add to all edges or an Object with per-edge counts  extend.top   Number ?    extend.left   Number ?    extend.bottom   Number ?    extend.right   Number ?       \u793a\u4f8b    // Resize to 140 pixels wide, then add 10 transparent pixels\n// to the top, left and right edges and 20 to the bottom edge\nsharp(input)\n  .resize(140)\n  .background({r: 0, g: 0, b: 0, alpha: 0})\n  .extend({top: 10, bottom: 20, left: 10, right: 10})\n  ...   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "extend"
        }, 
        {
            "location": "/api-operation/#flatten", 
            "text": "Merge alpha transparency channel, if any, with  background .  \u53c2\u6570     flatten   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "flatten"
        }, 
        {
            "location": "/api-operation/#trim", 
            "text": "Trim \"boring\" pixels from all edges that contain values within a percentage similarity of the top-left pixel.  \u53c2\u6570      tolerance   Number  value between 1 and 99 representing the percentage similarity. (optional, default  10 )    Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "trim"
        }, 
        {
            "location": "/api-operation/#gamma", 
            "text": "Apply a gamma correction by reducing the encoding (darken) pre-resize at a factor of  1/gamma \nthen increasing the encoding (brighten) post-resize at a factor of  gamma .\nThis can improve the perceived brightness of a resized image in non-linear colour spaces.\nJPEG and WebP input images will not take advantage of the shrink-on-load performance optimisation\nwhen applying a gamma correction.  \u53c2\u6570      gamma   Number  value between 1.0 and 3.0. (optional, default  2.2 )    Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "gamma"
        }, 
        {
            "location": "/api-operation/#negate", 
            "text": "Produce the \"negative\" of the image.  \u53c2\u6570     negate   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "negate"
        }, 
        {
            "location": "/api-operation/#normalise", 
            "text": "Enhance output image contrast by stretching its luminance to cover the full dynamic range.  \u53c2\u6570     normalise   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "normalise"
        }, 
        {
            "location": "/api-operation/#normalize", 
            "text": "Alternative spelling of normalise.  \u53c2\u6570     normalize   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "normalize"
        }, 
        {
            "location": "/api-operation/#convolve", 
            "text": "Convolve the image with the specified kernel.  \u53c2\u6570     kernel   Object    kernel.width   Number  width of the kernel in pixels.  kernel.height   Number  width of the kernel in pixels.  kernel.kernel   Array Number  Array of length  width*height  containing the kernel values.  kernel.scale   Number  the scale of the kernel in pixels. (optional, default  sum )  kernel.offset   Number  the offset of the kernel in pixels. (optional, default  0 )     \u793a\u4f8b    sharp(input)\n  .convolve({\n    width: 3,\n    height: 3,\n    kernel: [-1, 0, 1, -2, 0, 2, -1, 0, 1]\n  })\n  .raw()\n  .toBuffer(function(err, data, info) {\n    // data contains the raw pixel data representing the convolution\n    // of the input image with the horizontal Sobel operator\n  });   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "convolve"
        }, 
        {
            "location": "/api-operation/#threshold", 
            "text": "Any pixel value greather than or equal to the threshold value will be set to 255, otherwise it will be set to 0.  \u53c2\u6570     threshold   Number  a value in the range 0-255 representing the level at which the threshold will be applied. (optional, default  128 )   options   Object ?     options.greyscale   Boolean  convert to single channel greyscale. (optional, default  true )  options.grayscale   Boolean  alternative spelling for greyscale. (optional, default  true )     Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "threshold"
        }, 
        {
            "location": "/api-operation/#boolean", 
            "text": "Perform a bitwise boolean operation with operand image.  This operation creates an output image where each pixel is the result of\nthe selected bitwise boolean  operation  between the corresponding pixels of the input images.  \u53c2\u6570     operand   ( Buffer  |  String )  Buffer containing image data or String containing the path to an image file.  operator   String  one of  and ,  or  or  eor  to perform that bitwise operation, like the C logic operators  ,  |  and  ^  respectively.   options   Object ?     options.raw   Object ?  describes operand when using raw pixel data.  options.raw.width   Number ?    options.raw.height   Number ?    options.raw.channels   Number ?         Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "boolean"
        }, 
        {
            "location": "/api-colour/", 
            "text": "background\n\n\nSet the background for the \nembed\n, \nflatten\n and \nextend\n operations.\nThe default background is \n{r: 0, g: 0, b: 0, alpha: 1}\n, black without transparency.\n\n\nDelegates to the \ncolor\n module, which can throw an Error\nbut is liberal in what it accepts, clipping values to sensible min/max.\nThe alpha value is a float between \n0\n (transparent) and \n1\n (opaque).\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\nrgba\n \n(\nString\n | \nObject\n)\n parsed by the \ncolor\n module to extract values for red, green, blue and alpha.\n\n\n\n\n\n\nThrows \nError\n Invalid parameter\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ngreyscale\n\n\nConvert to 8-bit greyscale; 256 shades of grey.\nThis is a linear operation. If the input image is in a non-linear colour space such as sRGB, use \ngamma()\n with \ngreyscale()\n for the best results.\nBy default the output image will be web-friendly sRGB and contain three (identical) color channels.\nThis may be overridden by other sharp operations such as \ntoColourspace('b-w')\n,\nwhich will produce an output image containing one color channel.\nAn alpha channel may be present, and will be unchanged by the operation.\n\n\n\u53c2\u6570\n \n\n\n\n\ngreyscale\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ngrayscale\n\n\nAlternative spelling of \ngreyscale\n.\n\n\n\u53c2\u6570\n \n\n\n\n\ngrayscale\n \nBoolean\n  (optional, default \ntrue\n)\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ntoColourspace\n\n\nSet the output colourspace.\nBy default output image will be web-friendly sRGB, with additional channels interpreted as alpha channels.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\ncolourspace\n \nString\n?\n output colourspace e.g. \nsrgb\n, \nrgb\n, \ncmyk\n, \nlab\n, \nb-w\n \n...\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\ntoColorspace\n\n\nAlternative spelling of \ntoColourspace\n.\n\n\n\u53c2\u6570\n \n\n\n\n\n\n\ncolorspace\n \nString\n?\n output colorspace.\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp", 
            "title": "\u989c\u8272\u64cd\u7eb5"
        }, 
        {
            "location": "/api-colour/#background", 
            "text": "Set the background for the  embed ,  flatten  and  extend  operations.\nThe default background is  {r: 0, g: 0, b: 0, alpha: 1} , black without transparency.  Delegates to the  color  module, which can throw an Error\nbut is liberal in what it accepts, clipping values to sensible min/max.\nThe alpha value is a float between  0  (transparent) and  1  (opaque).  \u53c2\u6570      rgba   ( String  |  Object )  parsed by the  color  module to extract values for red, green, blue and alpha.    Throws  Error  Invalid parameter    \u8fd4\u56de   Sharp", 
            "title": "background"
        }, 
        {
            "location": "/api-colour/#greyscale", 
            "text": "Convert to 8-bit greyscale; 256 shades of grey.\nThis is a linear operation. If the input image is in a non-linear colour space such as sRGB, use  gamma()  with  greyscale()  for the best results.\nBy default the output image will be web-friendly sRGB and contain three (identical) color channels.\nThis may be overridden by other sharp operations such as  toColourspace('b-w') ,\nwhich will produce an output image containing one color channel.\nAn alpha channel may be present, and will be unchanged by the operation.  \u53c2\u6570     greyscale   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "greyscale"
        }, 
        {
            "location": "/api-colour/#grayscale", 
            "text": "Alternative spelling of  greyscale .  \u53c2\u6570     grayscale   Boolean   (optional, default  true )   \u8fd4\u56de   Sharp", 
            "title": "grayscale"
        }, 
        {
            "location": "/api-colour/#tocolourspace", 
            "text": "Set the output colourspace.\nBy default output image will be web-friendly sRGB, with additional channels interpreted as alpha channels.  \u53c2\u6570      colourspace   String ?  output colourspace e.g.  srgb ,  rgb ,  cmyk ,  lab ,  b-w   ...    Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "toColourspace"
        }, 
        {
            "location": "/api-colour/#tocolorspace", 
            "text": "Alternative spelling of  toColourspace .  \u53c2\u6570      colorspace   String ?  output colorspace.    Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "toColorspace"
        }, 
        {
            "location": "/api-channel/", 
            "text": "extractChannel\n\n\nExtract a single channel from a multi-channel image.\n\n\n\u53c2\u6570\n \n\n\n\n\nchannel\n \n(\nNumber\n | \nString\n)\n zero-indexed band number to extract, or \nred\n, \ngreen\n or \nblue\n as alternative to \n0\n, \n1\n or \n2\n respectively.\n\n\n\n\n\u793a\u4f8b\n \n\n\nsharp(input)\n  .extractChannel('green')\n  .toFile('input_green.jpg', function(err, info) {\n    // info.channels === 1\n    // input_green.jpg contains the green channel of the input image\n   });\n\n\n\n\n\n\nThrows \nError\n Invalid channel\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\njoinChannel\n\n\nJoin one or more channels to the image.\nThe meaning of the added channels depends on the output colourspace, set with \ntoColourspace()\n.\nBy default the output image will be web-friendly sRGB, with additional channels interpreted as alpha channels.\nChannel ordering follows vips convention:\n\n\n\n\nsRGB: 0: Red, 1: Green, 2: Blue, 3: Alpha.\n\n\nCMYK: 0: Magenta, 1: Cyan, 2: Yellow, 3: Black, 4: Alpha.\n\n\n\n\nBuffers may be any of the image formats supported by sharp: JPEG, PNG, WebP, GIF, SVG, TIFF or raw pixel image data.\nFor raw pixel input, the \noptions\n object should contain a \nraw\n attribute, which follows the format of the attribute of the same name in the \nsharp()\n constructor.\n\n\n\u53c2\u6570\n \n\n\n\n\nimages\n \n(\nArray\n(\nString\n | \nBuffer\n)\n | \nString\n | \nBuffer\n)\n one or more images (file paths, Buffers).\n\n\n\n\noptions\n \nObject\n image options, see \nsharp()\n constructor.\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\n\n\u8fd4\u56de\n \nSharp\n \n\n\nbandbool\n\n\nPerform a bitwise boolean operation on all input image channels (bands) to produce a single channel output image.\n\n\n\u53c2\u6570\n \n\n\n\n\nboolOp\n \nString\n one of \nand\n, \nor\n or \neor\n to perform that bitwise operation, like the C logic operators \n, \n|\n and \n^\n respectively.\n\n\n\n\n\u793a\u4f8b\n \n\n\nsharp('3-channel-rgb-input.png')\n  .bandbool(sharp.bool.and)\n  .toFile('1-channel-output.png', function (err, info) {\n    // The output will be a single channel image where each pixel `P = R \n G \n B`.\n    // If `I(1,1) = [247, 170, 14] = [0b11110111, 0b10101010, 0b00001111]`\n    // then `O(1,1) = 0b11110111 \n 0b10101010 \n 0b00001111 = 0b00000010 = 2`.\n  });\n\n\n\n\n\n\nThrows \nError\n Invalid parameters\n\n\n\n\n\u8fd4\u56de\n \nSharp", 
            "title": "\u901a\u9053\u64cd\u4f5c"
        }, 
        {
            "location": "/api-channel/#extractchannel", 
            "text": "Extract a single channel from a multi-channel image.  \u53c2\u6570     channel   ( Number  |  String )  zero-indexed band number to extract, or  red ,  green  or  blue  as alternative to  0 ,  1  or  2  respectively.   \u793a\u4f8b    sharp(input)\n  .extractChannel('green')\n  .toFile('input_green.jpg', function(err, info) {\n    // info.channels === 1\n    // input_green.jpg contains the green channel of the input image\n   });   Throws  Error  Invalid channel   \u8fd4\u56de   Sharp", 
            "title": "extractChannel"
        }, 
        {
            "location": "/api-channel/#joinchannel", 
            "text": "Join one or more channels to the image.\nThe meaning of the added channels depends on the output colourspace, set with  toColourspace() .\nBy default the output image will be web-friendly sRGB, with additional channels interpreted as alpha channels.\nChannel ordering follows vips convention:   sRGB: 0: Red, 1: Green, 2: Blue, 3: Alpha.  CMYK: 0: Magenta, 1: Cyan, 2: Yellow, 3: Black, 4: Alpha.   Buffers may be any of the image formats supported by sharp: JPEG, PNG, WebP, GIF, SVG, TIFF or raw pixel image data.\nFor raw pixel input, the  options  object should contain a  raw  attribute, which follows the format of the attribute of the same name in the  sharp()  constructor.  \u53c2\u6570     images   ( Array ( String  |  Buffer )  |  String  |  Buffer )  one or more images (file paths, Buffers).   options   Object  image options, see  sharp()  constructor.    Throws  Error  Invalid parameters    \u8fd4\u56de   Sharp", 
            "title": "joinChannel"
        }, 
        {
            "location": "/api-channel/#bandbool", 
            "text": "Perform a bitwise boolean operation on all input image channels (bands) to produce a single channel output image.  \u53c2\u6570     boolOp   String  one of  and ,  or  or  eor  to perform that bitwise operation, like the C logic operators  ,  |  and  ^  respectively.   \u793a\u4f8b    sharp('3-channel-rgb-input.png')\n  .bandbool(sharp.bool.and)\n  .toFile('1-channel-output.png', function (err, info) {\n    // The output will be a single channel image where each pixel `P = R   G   B`.\n    // If `I(1,1) = [247, 170, 14] = [0b11110111, 0b10101010, 0b00001111]`\n    // then `O(1,1) = 0b11110111   0b10101010   0b00001111 = 0b00000010 = 2`.\n  });   Throws  Error  Invalid parameters   \u8fd4\u56de   Sharp", 
            "title": "bandbool"
        }, 
        {
            "location": "/api-utility/", 
            "text": "\u7f13\u5b58\n\n\nGets or, when options are provided, sets the limits of \nlibvips'\n operation cache.\nExisting entries in the cache will be trimmed after any change in limits.\nThis method always \n\u8fd4\u56de\n cache statistics,\nuseful for determining how much working memory is required for a particular task.\n\n\n\u53c2\u6570\n\n\n\n\noptions\n \n(\nObject\n | \nBoolean\n)\n Object with the following attributes, or Boolean where true uses default cache settings and false removes all caching (optional, default \ntrue\n)\n\n\noptions.memory\n \nNumber\n is the maximum memory in MB to use for this cache (optional, default \n50\n)\n\n\noptions.files\n \nNumber\n is the maximum number of files to hold open (optional, default \n20\n)\n\n\noptions.items\n \nNumber\n is the maximum number of operations to cache (optional, default \n100\n)\n\n\n\n\n\n\n\n\n\u5b9e\u4f8b\n\n\nconst stats = sharp.cache();\n\n\n\n\nsharp.cache( { items: 200 } );\nsharp.cache( { files: 0 } );\nsharp.cache(false);\n\n\n\n\n\u8fd4\u56de\n \nObject\n \n\n\n\u5e76\u53d1\u6027\n\n\nGets or, when a concurrency is provided, sets\nthe number of threads \nlibvips'\n should create to process each image.\nThe default value is the number of CPU cores.\nA value of \n0\n will reset to this default.\n\n\nThe maximum number of images that can be processed in parallel\nis limited by libuv's \nUV_THREADPOOL_SIZE\n environment variable.\n\n\nThis method always \n\u8fd4\u56de\n the current concurrency.\n\n\n\u53c2\u6570\n\n\n\n\nconcurrency\n \nNumber\n?\n \n\n\n\n\n\u793a\u4f8b\n\n\nconst threads = sharp.concurrency(); // 4\nsharp.concurrency(2); // 2\nsharp.concurrency(0); // 4\n\n\n\n\n\u8fd4\u56de\n \nNumber\n concurrency\n\n\n\u8ba1\u6570\u5668\n\n\nProvides access to internal task counters.\n\n\n\n\nqueue is the number of tasks this module has queued waiting for \nlibuv\n to provide a worker thread from its pool.\n\n\nprocess is the number of resize tasks currently being processed.\n\n\n\n\n\u793a\u4f8b\n\n\nconst counters = sharp.counters(); // { queue: 2, process: 4 }\n\n\n\n\n\u8fd4\u56de\n \nObject\n \n\n\nsimd\n\n\nGet and set use of SIMD vector unit instructions.\nRequires libvips to have been compiled with liborc support.\n\n\nImproves the performance of \nresize\n, \nblur\n and \nsharpen\n operations\nby taking advantage of the SIMD vector unit of the CPU, e.g. Intel SSE and ARM NEON.\n\n\nThis feature is currently off by default but future versions may reverse this.\nVersions of liborc prior to 0.4.25 are known to segfault under heavy load.\n\n\n\u53c2\u6570\n\n\n\n\nsimd\n \nBoolean\n  (optional, default \nfalse\n)\n\n\n\n\n\u793a\u4f8b\n\n\nconst simd = sharp.simd();\n// simd is `true` if SIMD is currently enabled\n\n\n\n\nconst simd = sharp.simd(true);\n// attempts to enable the use of SIMD, returning true if available\n\n\n\n\n\u8fd4\u56de\n \nBoolean", 
            "title": "\u5b9e\u7528\u7a0b\u5e8f"
        }, 
        {
            "location": "/api-utility/#_1", 
            "text": "Gets or, when options are provided, sets the limits of  libvips'  operation cache.\nExisting entries in the cache will be trimmed after any change in limits.\nThis method always  \u8fd4\u56de  cache statistics,\nuseful for determining how much working memory is required for a particular task.  \u53c2\u6570   options   ( Object  |  Boolean )  Object with the following attributes, or Boolean where true uses default cache settings and false removes all caching (optional, default  true )  options.memory   Number  is the maximum memory in MB to use for this cache (optional, default  50 )  options.files   Number  is the maximum number of files to hold open (optional, default  20 )  options.items   Number  is the maximum number of operations to cache (optional, default  100 )     \u5b9e\u4f8b  const stats = sharp.cache();  sharp.cache( { items: 200 } );\nsharp.cache( { files: 0 } );\nsharp.cache(false);  \u8fd4\u56de   Object", 
            "title": "\u7f13\u5b58"
        }, 
        {
            "location": "/api-utility/#_2", 
            "text": "Gets or, when a concurrency is provided, sets\nthe number of threads  libvips'  should create to process each image.\nThe default value is the number of CPU cores.\nA value of  0  will reset to this default.  The maximum number of images that can be processed in parallel\nis limited by libuv's  UV_THREADPOOL_SIZE  environment variable.  This method always  \u8fd4\u56de  the current concurrency.  \u53c2\u6570   concurrency   Number ?     \u793a\u4f8b  const threads = sharp.concurrency(); // 4\nsharp.concurrency(2); // 2\nsharp.concurrency(0); // 4  \u8fd4\u56de   Number  concurrency", 
            "title": "\u5e76\u53d1\u6027"
        }, 
        {
            "location": "/api-utility/#_3", 
            "text": "Provides access to internal task counters.   queue is the number of tasks this module has queued waiting for  libuv  to provide a worker thread from its pool.  process is the number of resize tasks currently being processed.   \u793a\u4f8b  const counters = sharp.counters(); // { queue: 2, process: 4 }  \u8fd4\u56de   Object", 
            "title": "\u8ba1\u6570\u5668"
        }, 
        {
            "location": "/api-utility/#simd", 
            "text": "Get and set use of SIMD vector unit instructions.\nRequires libvips to have been compiled with liborc support.  Improves the performance of  resize ,  blur  and  sharpen  operations\nby taking advantage of the SIMD vector unit of the CPU, e.g. Intel SSE and ARM NEON.  This feature is currently off by default but future versions may reverse this.\nVersions of liborc prior to 0.4.25 are known to segfault under heavy load.  \u53c2\u6570   simd   Boolean   (optional, default  false )   \u793a\u4f8b  const simd = sharp.simd();\n// simd is `true` if SIMD is currently enabled  const simd = sharp.simd(true);\n// attempts to enable the use of SIMD, returning true if available  \u8fd4\u56de   Boolean", 
            "title": "simd"
        }, 
        {
            "location": "/performance/", 
            "text": "Performance\n\n\n\u6d4b\u8bd5\u73af\u5883\n\n\n\n\nAWS EC2 eu-central-1 \nc4.xlarge\n (4x E5-2666 v3 @ 2.90GHz)\n\n\nUbuntu 16.04.1 LTS (HVM, SSD, 20161115, ami-82cf0aed)\n\n\nNode.js v6.9.1\n\n\n\n\n\u7ade\u4e89\u8005\n\n\n\n\njimp\n v0.2.27 - Image processing in pure JavaScript. Bilinear interpolation only.\n\n\nlwip\n v0.0.9 - Wrapper around CImg. Compiles outdated, insecure dependencies from source.\n\n\nmapnik\n v3.5.14 - Whilst primarily a map renderer, Mapnik contains bitmap image utilities.\n\n\nimagemagick-native\n v1.9.3 - Wrapper around libmagick++, supports Buffers only.\n\n\nimagemagick\n v0.1.3 - Supports filesystem only and \"\nhas been unmaintained for a long time\n\".\n\n\ngm\n v1.23.0 - Fully featured wrapper around GraphicsMagick's \ngm\n command line utility.\n\n\nsharp v0.17.0 / libvips v8.4.2 - Caching within libvips disabled to ensure a fair comparison.\n\n\n\n\n\u4efb\u52a1\n\n\nDecompress a 2725x2225 JPEG image,\nresize to 720x588 using Lanczos 3 resampling (where available),\nthen compress to JPEG at a \"quality\" setting of 80.\n\n\n\u7ed3\u679c\n\n\n\n\n\n\n\n\n\u6a21\u5757\n\n\n\u8f93\u5165\n\n\n\u8f93\u51fa\n\n\nOps/sec\n\n\nSpeed-up\n\n\n\n\n\n\n\n\n\n\njimp (bilinear)\n\n\nbuffer\n\n\nbuffer\n\n\n1.06\n\n\n1.0\n\n\n\n\n\n\nlwip\n\n\nbuffer\n\n\nbuffer\n\n\n1.87\n\n\n1.8\n\n\n\n\n\n\nmapnik\n\n\nbuffer\n\n\nbuffer\n\n\n2.91\n\n\n2.7\n\n\n\n\n\n\nimagemagick-native\n\n\nbuffer\n\n\nbuffer\n\n\n4.03\n\n\n3.8\n\n\n\n\n\n\nimagemagick\n\n\nfile\n\n\nfile\n\n\n7.10\n\n\n6.7\n\n\n\n\n\n\ngm\n\n\nbuffer\n\n\nbuffer\n\n\n7.08\n\n\n6.7\n\n\n\n\n\n\ngm\n\n\nfile\n\n\nfile\n\n\n7.10\n\n\n6.7\n\n\n\n\n\n\nsharp\n\n\nstream\n\n\nstream\n\n\n27.61\n\n\n26.0\n\n\n\n\n\n\nsharp\n\n\nfile\n\n\nfile\n\n\n28.41\n\n\n26.8\n\n\n\n\n\n\nsharp\n\n\nbuffer\n\n\nfile\n\n\n28.71\n\n\n27.1\n\n\n\n\n\n\nsharp\n\n\nfile\n\n\nbuffer\n\n\n28.60\n\n\n27.0\n\n\n\n\n\n\nsharp\n\n\nbuffer\n\n\nbuffer\n\n\n29.08\n\n\n27.4\n\n\n\n\n\n\n\n\nGreater libvips performance can be expected with caching enabled (default)\nand using 8+ core machines, especially those with larger L1/L2 CPU caches.\n\n\nThe I/O limits of the relevant (de)compression library will generally determine maximum throughput.\n\n\n\u57fa\u51c6\u6d4b\u8bd5\u5148\u51b3\u6761\u4ef6\n\n\nRequires both \nImageMagick\n and \nGraphicsMagick\n:\n\n\nbrew install imagemagick\nbrew install graphicsmagick\n\n\n\n\nsudo apt-get install imagemagick libmagick++-dev graphicsmagick\n\n\n\n\nsudo yum install ImageMagick-devel ImageMagick-c++-devel GraphicsMagick\n\n\n\n\n\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\n\n\ngit clone https://github.com/lovell/sharp.git\ncd sharp\nnpm install\ncd test/bench\nnpm install\nnpm test", 
            "title": "\u6027\u80fd"
        }, 
        {
            "location": "/performance/#performance", 
            "text": "", 
            "title": "Performance"
        }, 
        {
            "location": "/performance/#_1", 
            "text": "AWS EC2 eu-central-1  c4.xlarge  (4x E5-2666 v3 @ 2.90GHz)  Ubuntu 16.04.1 LTS (HVM, SSD, 20161115, ami-82cf0aed)  Node.js v6.9.1", 
            "title": "\u6d4b\u8bd5\u73af\u5883"
        }, 
        {
            "location": "/performance/#_2", 
            "text": "jimp  v0.2.27 - Image processing in pure JavaScript. Bilinear interpolation only.  lwip  v0.0.9 - Wrapper around CImg. Compiles outdated, insecure dependencies from source.  mapnik  v3.5.14 - Whilst primarily a map renderer, Mapnik contains bitmap image utilities.  imagemagick-native  v1.9.3 - Wrapper around libmagick++, supports Buffers only.  imagemagick  v0.1.3 - Supports filesystem only and \" has been unmaintained for a long time \".  gm  v1.23.0 - Fully featured wrapper around GraphicsMagick's  gm  command line utility.  sharp v0.17.0 / libvips v8.4.2 - Caching within libvips disabled to ensure a fair comparison.", 
            "title": "\u7ade\u4e89\u8005"
        }, 
        {
            "location": "/performance/#_3", 
            "text": "Decompress a 2725x2225 JPEG image,\nresize to 720x588 using Lanczos 3 resampling (where available),\nthen compress to JPEG at a \"quality\" setting of 80.", 
            "title": "\u4efb\u52a1"
        }, 
        {
            "location": "/performance/#_4", 
            "text": "\u6a21\u5757  \u8f93\u5165  \u8f93\u51fa  Ops/sec  Speed-up      jimp (bilinear)  buffer  buffer  1.06  1.0    lwip  buffer  buffer  1.87  1.8    mapnik  buffer  buffer  2.91  2.7    imagemagick-native  buffer  buffer  4.03  3.8    imagemagick  file  file  7.10  6.7    gm  buffer  buffer  7.08  6.7    gm  file  file  7.10  6.7    sharp  stream  stream  27.61  26.0    sharp  file  file  28.41  26.8    sharp  buffer  file  28.71  27.1    sharp  file  buffer  28.60  27.0    sharp  buffer  buffer  29.08  27.4     Greater libvips performance can be expected with caching enabled (default)\nand using 8+ core machines, especially those with larger L1/L2 CPU caches.  The I/O limits of the relevant (de)compression library will generally determine maximum throughput.", 
            "title": "\u7ed3\u679c"
        }, 
        {
            "location": "/performance/#_5", 
            "text": "Requires both  ImageMagick  and  GraphicsMagick :  brew install imagemagick\nbrew install graphicsmagick  sudo apt-get install imagemagick libmagick++-dev graphicsmagick  sudo yum install ImageMagick-devel ImageMagick-c++-devel GraphicsMagick", 
            "title": "\u57fa\u51c6\u6d4b\u8bd5\u5148\u51b3\u6761\u4ef6"
        }, 
        {
            "location": "/performance/#_6", 
            "text": "git clone https://github.com/lovell/sharp.git\ncd sharp\nnpm install\ncd test/bench\nnpm install\nnpm test", 
            "title": "\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5"
        }, 
        {
            "location": "/changelog/", 
            "text": "\u66f4\u65b0\u65e5\u5fd7\n\n\nv0.19 - \"\nsuit\n\"\n\n\nRequires libvips v8.6.0.\n\n\nv0.19.0 - TBD\n\n\n\n\n\n\nExpose offset coordinates of strategy-based crop.\n  \n#868\n\n  \n@mirohristov-com\n\n\n\n\n\n\nPNG output now defaults to adaptiveFiltering=false, compressionLevel=9\n  \n#872\n\n  \n@wmertens\n\n\n\n\n\n\nAdd stats feature for pixel-derived image statistics.\n  \n#915\n\n  \n@rnanwani\n\n\n\n\n\n\nAdd failOnError option to fail-fast on bad input image data.\n  \n#976\n\n  \n@mceachen\n\n\n\n\n\n\nResize: switch to libvips' implementation, make fastShrinkOnLoad optional, remove interpolator and centreSampling options.\n  \n#977\n\n  \n@jardakotesovec\n\n\n\n\n\n\nAttach finish event listener to a clone only for Stream-based input.\n  \n#995\n\n  \n@whmountains\n\n\n\n\n\n\nAdd tilecache before smartcrop to avoid over-computation of previous operations.\n  \n#1028\n\n  \n@coffeebite\n\n\n\n\n\n\nPrevent toFile extension taking precedence over requested format.\n  \n#1037\n\n  \n@tomgallagher\n\n\n\n\n\n\nAdd support for gravity option to existing embed feature.\n  \n#1038\n\n  \n@AzureByte\n\n\n\n\n\n\nTIFF output: switch default predictor from 'none' to 'horizontal' to match libvips' behaviour.\n\n\n\n\n\n\nv0.18 - \"\nridge\n\"\n\n\nRequires libvips v8.5.5.\n\n\nv0.18.4 - 18\nth\n September 2017\n\n\n\n\nEnsure input Buffer really is marked as Persistent, prevents mark-sweep GC.\n  \n#950\n\n  \n@lfdoherty\n\n\n\n\nv0.18.3 - 13\nth\n September 2017\n\n\n\n\n\n\nSkip shrink-on-load when trimming.\n  \n#888\n\n  \n@kleisauke\n\n\n\n\n\n\nMigrate from got to simple-get for basic auth support.\n  \n#945\n\n  \n@pbomb\n\n\n\n\n\n\nv0.18.2 - 1\nst\n July 2017\n\n\n\n\n\n\nExpose libvips' xres and yres properties for TIFF output.\n  \n#828\n\n  \n@YvesBos\n\n\n\n\n\n\nEnsure flip and flop operations work with auto-rotate.\n  \n#837\n\n  \n@rexxars\n\n\n\n\n\n\nAllow binary download URL override via SHARP_DIST_BASE_URL env variable.\n  \n#841\n\n\n\n\n\n\nAdd support for Solus Linux.\n  \n#857\n\n  \n@ekremkaraca\n\n\n\n\n\n\nv0.18.1 - 30\nth\n May 2017\n\n\n\n\nRemove regression from #781 that could cause incorrect shrink calculation.\n  \n#831\n\n  \n@suprMax\n\n\n\n\nv0.18.0 - 30\nth\n May 2017\n\n\n\n\n\n\nRemove the previously-deprecated output format \"option\" functions:\n    quality, progressive, compressionLevel, withoutAdaptiveFiltering,\n    withoutChromaSubsampling, trellisQuantisation, trellisQuantization,\n    overshootDeringing, optimiseScans and optimizeScans.\n\n\n\n\n\n\nEnsure maximum output dimensions are based on the format to be used.\n  \n#176\n\n  \n@stephanebachelier\n\n\n\n\n\n\nAvoid costly (un)premultiply when using overlayWith without alpha channel.\n  \n#573\n\n  \n@strarsis\n\n\n\n\n\n\nInclude pixel depth (e.g. \"uchar\") when reading metadata.\n  \n#577\n\n  \n@moedusa\n\n\n\n\n\n\nAdd support for Buffer and Stream-based TIFF output.\n  \n#587\n\n  \n@strarsis\n\n\n\n\n\n\nExpose warnings from libvips via NODE_DEBUG=sharp environment variable.\n  \n#607\n\n  \n@puzrin\n\n\n\n\n\n\nSwitch to the libvips implementation of \"attention\" and \"entropy\" crop strategies.\n  \n#727\n\n\n\n\n\n\nImprove performance and accuracy of nearest neighbour integral upsampling.\n  \n#752\n\n  \n@MrIbby\n\n\n\n\n\n\nConstructor single argument API: allow plain object, reject null/undefined.\n  \n#768\n\n  \n@kub1x\n\n\n\n\n\n\nEnsure ARM64 pre-built binaries use correct C++11 ABI version.\n  \n#772\n\n  \n@ajiratech2\n\n\n\n\n\n\nPrevent aliasing by using dynamic values for shrink(-on-load).\n  \n#781\n\n  \n@kleisauke\n\n\n\n\n\n\nExpose libvips' \"squash\" parameter to enable 1-bit TIFF output.\n  \n#783\n\n  \n@YvesBos\n\n\n\n\n\n\nAdd support for rotation using any multiple of +/-90 degrees.\n  \n#791\n\n  \n@ncoden\n\n\n\n\n\n\nAdd \"jpg\" alias to toFormat as shortened form of \"jpeg\".\n  \n#814\n\n  \n@jingsam\n\n\n\n\n\n\nv0.17 - \"\nquill\n\"\n\n\nRequires libvips v8.4.2.\n\n\nv0.17.3 - 1\nst\n April 2017\n\n\n\n\n\n\nAllow toBuffer to optionally resolve a Promise with both info and data.\n  \n#143\n\n  \n@salzhrani\n\n\n\n\n\n\nCreate blank image of given width, height, channels and background.\n  \n#470\n\n  \n@pjarts\n\n\n\n\n\n\nAdd support for the \"nearest\" kernel for image reductions.\n  \n#732\n\n  \n@alice0meta\n\n\n\n\n\n\nAdd support for TIFF compression and predictor options.\n  \n#738\n\n  \n@kristojorg\n\n\n\n\n\n\nv0.17.2 - 11\nth\n February 2017\n\n\n\n\n\n\nEnsure Readable side of Stream can start flowing after Writable side has finished.\n  \n#671\n\n  \n@danhaller\n\n\n\n\n\n\nExpose WebP alpha quality, lossless and near-lossless output options.\n  \n#685\n\n  \n@rnanwani\n\n\n\n\n\n\nv0.17.1 - 15\nth\n January 2017\n\n\n\n\n\n\nImprove error messages for invalid parameters.\n  \n@spikeon\n\n  \n#644\n\n\n\n\n\n\nSimplify expression for finding vips-cpp libdir.\n  \n#656\n\n\n\n\n\n\nAllow HTTPS-over-HTTP proxy when downloading pre-compiled dependencies.\n  \n@wangzhiwei1888\n\n  \n#679\n\n\n\n\n\n\nv0.17.0 - 11\nth\n December 2016\n\n\n\n\n\n\nDrop support for versions of Node prior to v4.\n\n\n\n\n\n\nDeprecate the following output format \"option\" functions:\n    quality, progressive, compressionLevel, withoutAdaptiveFiltering,\n    withoutChromaSubsampling, trellisQuantisation, trellisQuantization,\n    overshootDeringing, optimiseScans and optimizeScans.\n  Access to these is now via output format functions, for example \nquality(n)\n\n    is now \njpeg({quality: n})\n and/or \nwebp({quality: n})\n.\n\n\n\n\n\n\nAutoconvert GIF and SVG input to PNG output if no other format is specified.\n\n\n\n\n\n\nExpose libvips' \"centre\" resize option to mimic *magick's +0.5px convention.\n  \n#568\n\n\n\n\n\n\nEnsure support for embedded base64 PNG and JPEG images within an SVG.\n  \n#601\n\n  \n@dynamite-ready\n\n\n\n\n\n\nEnsure premultiply operation occurs before box filter shrink.\n  \n#605\n\n  \n@CmdrShepardsPie\n\n  \n@teroparvinen\n\n\n\n\n\n\nAdd support for PNG and WebP tile-based output formats (in addition to JPEG).\n  \n#622\n\n  \n@ppaskaris\n\n\n\n\n\n\nAllow use of extend with greyscale input.\n  \n#623\n\n  \n@ppaskaris\n\n\n\n\n\n\nAllow non-RGB input to embed/extend onto background with an alpha channel.\n  \n#646\n\n  \n@DaGaMs\n\n\n\n\n\n\nv0.16 - \"\npencil\n\"\n\n\nRequires libvips v8.3.3\n\n\nv0.16.2 - 22\nnd\n October 2016\n\n\n\n\nRestrict readelf usage to Linux only when detecting global libvips version.\n  \n#602\n\n  \n@caoko\n\n\n\n\nv0.16.1 - 13\nth\n October 2016\n\n\n\n\n\n\nC++11 ABI version is now auto-detected, remove sharp-cxx11 installation flag.\n\n\n\n\n\n\nAdd experimental 'attention' crop strategy.\n  \n#295\n\n\n\n\n\n\nInclude .node extension for Meteor's require() implementation.\n  \n#537\n\n  \n@isjackwild\n\n\n\n\n\n\nEnsure convolution kernel scale is clamped to a minimum value of 1.\n  \n#561\n\n  \n@abagshaw\n\n\n\n\n\n\nCorrect calculation of y-axis placement when overlaying image at a fixed point.\n  \n#566\n\n  \n@Nateowami\n\n\n\n\n\n\nv0.16.0 - 18\nth\n August 2016\n\n\n\n\n\n\nAdd pre-compiled libvips for OS X, ARMv7 and ARMv8.\n  \n#312\n\n\n\n\n\n\nEnsure boolean, bandbool, extractChannel ops occur before sRGB conversion.\n  \n#504\n\n  \n@mhirsch\n\n\n\n\n\n\nRecalculate factors after WebP shrink-on-load to avoid round-to-zero errors.\n  \n#508\n\n  \n@asilvas\n\n\n\n\n\n\nPrevent boolean errors during extract operation.\n  \n#511\n\n  \n@mhirsch\n\n\n\n\n\n\nAdd joinChannel and toColourspace/toColorspace operations.\n  \n#513\n\n  \n@mhirsch\n\n\n\n\n\n\nAdd support for raw pixel data with boolean and withOverlay operations.\n  \n#516\n\n  \n@mhirsch\n\n\n\n\n\n\nPrevent bandbool creating a single channel sRGB image.\n  \n#519\n\n  \n@mhirsch\n\n\n\n\n\n\nEnsure ICC profiles are removed from PNG output unless withMetadata used.\n  \n#521\n\n  \n@ChrisPinewood\n\n\n\n\n\n\nAdd alpha channels, if missing, to overlayWith images.\n  \n#540\n\n  \n@cmtt\n\n\n\n\n\n\nRemove deprecated interpolateWith method - use resize(w, h, { interpolator: ... })\n  \n#310\n\n\n\n\n\n\nv0.15 - \"\noutfit\n\"\n\n\nRequires libvips v8.3.1\n\n\nv0.15.1 - 12\nth\n July 2016\n\n\n\n\n\n\nConcat Stream-based input in single operation for ~+3% perf and less GC.\n  \n#429\n\n  \n@papandreou\n\n\n\n\n\n\nAdd alpha channel, if required, before extend operation.\n  \n#439\n\n  \n@frulo\n\n\n\n\n\n\nAllow overlay image to be repeated across entire image via tile option.\n  \n#443\n\n  \n@lemnisk8\n\n\n\n\n\n\nAdd cutout option to overlayWith feature, applies only the alpha channel of the overlay image.\n  \n#448\n\n  \n@kleisauke\n\n\n\n\n\n\nEnsure scaling factors are calculated independently to prevent rounding errors.\n  \n#452\n\n  \n@puzrin\n\n\n\n\n\n\nAdd --sharp-cxx11 flag to compile with gcc's new C++11 ABI.\n  \n#456\n\n  \n@kapouer\n\n\n\n\n\n\nAdd top/left offset support to overlayWith operation.\n  \n#473\n\n  \n@rnanwani\n\n\n\n\n\n\nAdd convolve operation for kernel-based convolution.\n  \n#479\n\n  \n@mhirsch\n\n\n\n\n\n\nAdd greyscale option to threshold operation for colourspace conversion control.\n  \n#480\n\n  \n@mhirsch\n\n\n\n\n\n\nEnsure ICC profiles are licenced for distribution.\n  \n#486\n\n  \n@kapouer\n\n\n\n\n\n\nAllow images with an alpha channel to work with LAB-colourspace based sharpen.\n  \n#490\n\n  \n@jwagner\n\n\n\n\n\n\nAdd trim operation to remove \"boring\" edges.\n  \n#492\n\n  \n@kleisauke\n\n\n\n\n\n\nAdd bandbool feature for channel-wise boolean operations.\n  \n#496\n\n  \n@mhirsch\n\n\n\n\n\n\nAdd extractChannel operation to extract a channel from an image.\n  \n#497\n\n  \n@mhirsch\n\n\n\n\n\n\nAdd ability to read and write native libvips .v files.\n  \n#500\n\n  \n@mhirsch\n\n\n\n\n\n\nAdd boolean feature for bitwise image operations.\n  \n#501\n\n  \n@mhirsch\n\n\n\n\n\n\nv0.15.0 - 21\nst\n May 2016\n\n\n\n\n\n\nUse libvips' new Lanczos 3 kernel as default for image reduction.\n  Deprecate interpolateWith method, now provided as a resize option.\n  \n#310\n\n  \n@jcupitt\n\n\n\n\n\n\nTake advantage of libvips v8.3 features.\n  Add support for libvips' new GIF and SVG loaders.\n  Pre-built binaries now include giflib and librsvg, exclude *magick.\n  Use shrink-on-load for WebP input.\n  Break existing sharpen API to accept sigma and improve precision.\n  \n#369\n\n\n\n\n\n\nRemove unnecessary (un)premultiply operations when not resizing/compositing.\n  \n#413\n\n  \n@jardakotesovec\n\n\n\n\n\n\nv0.14 - \"\nneedle\n\"\n\n\nRequires libvips v8.2.3\n\n\nv0.14.1 - 16\nth\n April 2016\n\n\n\n\n\n\nAllow removal of limitation on input pixel count via limitInputPixels. Use with care.\n  \n#250\n\n  \n#316\n\n  \n@anandthakker\n\n  \n@kentongray\n\n\n\n\n\n\nUse final output image for metadata passed to callback.\n  \n#399\n\n  \n@salzhrani\n\n\n\n\n\n\nAdd support for writing tiled images to a zip container.\n  \n#402\n\n  \n@felixbuenemann\n\n\n\n\n\n\nAllow use of embed with 1 and 2 channel images.\n  \n#411\n\n  \n@janaz\n\n\n\n\n\n\nImprove Electron compatibility by allowing node-gyp rebuilds without npm.\n  \n#412\n\n  \n@nouh\n\n\n\n\n\n\nv0.14.0 - 2\nnd\n April 2016\n\n\n\n\n\n\nAdd ability to extend (pad) the edges of an image.\n  \n#128\n\n  \n@blowsie\n\n\n\n\n\n\nAdd support for Zoomify and Google tile layouts. Breaks existing tile API.\n  \n#223\n\n  \n@bdunnette\n\n\n\n\n\n\nImprovements to overlayWith: differing sizes/formats, gravity, buffer input.\n  \n#239\n\n  \n@chrisriley\n\n\n\n\n\n\nAdd entropy-based crop strategy to remove least interesting edges.\n  \n#295\n\n  \n@rightaway\n\n\n\n\n\n\nExpose density metadata; set density of images from vector input.\n  \n#338\n\n  \n@lookfirst\n\n\n\n\n\n\nEmit post-processing 'info' event for Stream output.\n  \n#367\n\n  \n@salzhrani\n\n\n\n\n\n\nEnsure output image EXIF Orientation values are within 1-8 range.\n  \n#385\n\n  \n@jtobinisaniceguy\n\n\n\n\n\n\nEnsure ratios are not swapped when rotating 90/270 and ignoring aspect.\n  \n#387\n\n  \n@kleisauke\n\n\n\n\n\n\nRemove deprecated style of calling extract API. Breaks calls using positional arguments.\n  \n#276\n\n\n\n\n\n\nv0.13 - \"\nmind\n\"\n\n\nRequires libvips v8.2.2\n\n\nv0.13.1 - 27\nth\n February 2016\n\n\n\n\nFix embedding onto transparent backgrounds; regression introduced in v0.13.0.\n  \n#366\n\n  \n@diegocsandrim\n\n\n\n\nv0.13.0 - 15\nth\n February 2016\n\n\n\n\n\n\nImprove vector image support by allowing control of density/DPI.\n  Switch pre-built libs from Imagemagick to Graphicsmagick.\n  \n#110\n\n  \n@bradisbell\n\n\n\n\n\n\nAdd support for raw, uncompressed pixel Buffer/Stream input.\n  \n#220\n\n  \n@mikemorris\n\n\n\n\n\n\nSwitch from libvips' C to C++ bindings, requires upgrade to v8.2.2.\n  \n#299\n\n\n\n\n\n\nControl number of open files in libvips' cache; breaks existing \ncache\n behaviour.\n  \n#315\n\n  \n@impomezia\n\n\n\n\n\n\nEnsure 16-bit input images can be normalised and embedded onto transparent backgrounds.\n  \n#339\n\n  \n#340\n\n  \n@janaz\n\n\n\n\n\n\nEnsure selected format takes precedence over any unknown output filename extension.\n  \n#344\n\n  \n@ubaltaci\n\n\n\n\n\n\nAdd support for libvips' PBM, PGM, PPM and FITS image format loaders.\n  \n#347\n\n  \n@oaleynik\n\n\n\n\n\n\nEnsure default crop gravity is center/centre.\n  \n#351\n\n  \n@joelmukuthu\n\n\n\n\n\n\nImprove support for musl libc systems e.g. Alpine Linux.\n  \n#354\n\n  \n#359\n\n  \n@download13\n\n  \n@wjordan\n\n\n\n\n\n\nSmall optimisation when reducing by an integral factor to favour shrink over affine.\n\n\n\n\n\n\nAdd support for gamma correction of images with an alpha channel.\n\n\n\n\n\n\nv0.12 - \"\nlook\n\"\n\n\nRequires libvips v8.2.0\n\n\nv0.12.2 - 16\nth\n January 2016\n\n\n\n\n\n\nUpgrade libvips to v8.2.0 for improved vips_shrink.\n\n\n\n\n\n\nAdd pre-compiled libvips for ARMv6+ CPUs.\n\n\n\n\n\n\nEnsure 16-bit input images work with embed option.\n  \n#325\n\n  \n@janaz\n\n\n\n\n\n\nAllow compilation with gmake to provide FreeBSD support.\n  \n#326\n\n  \n@c0decafe\n\n\n\n\n\n\nAttempt to remove temporary file after installation.\n  \n#331\n\n  \n@dtoubelis\n\n\n\n\n\n\nv0.12.1 - 12\nth\n December 2015\n\n\n\n\n\n\nAllow use of SIMD vector instructions (via liborc) to be toggled on/off.\n  \n#172\n\n  \n@bkw\n\n  \n@puzrin\n\n\n\n\n\n\nEnsure embedded ICC profiles output with perceptual intent.\n  \n#321\n\n  \n@vlapo\n\n\n\n\n\n\nUse the NPM-configured HTTPS proxy, if any, for binary downloads.\n\n\n\n\n\n\nv0.12.0 - 23\nrd\n November 2015\n\n\n\n\n\n\nBundle pre-compiled libvips and its dependencies for 64-bit Linux and Windows.\n  \n#42\n\n\n\n\n\n\nTake advantage of libvips v8.1.0+ features.\n  \n#152\n\n\n\n\n\n\nAdd support for 64-bit Windows. Drop support for 32-bit Windows.\n  \n#224\n\n  \n@sabrehagen\n\n\n\n\n\n\nSwitch default interpolator to bicubic.\n  \n#289\n\n  \n@mahnunchik\n\n\n\n\n\n\nPre-extract rotatation should not swap width/height.\n  \n#296\n\n  \n@asilvas\n\n\n\n\n\n\nEnsure 16-bit+alpha input images are (un)premultiplied correctly.\n  \n#301\n\n  \n@izaakschroeder\n\n\n\n\n\n\nAdd \nthreshold\n operation.\n  \n#303\n\n  \n@dacarley\n\n\n\n\n\n\nAdd \nnegate\n operation.\n  \n#306\n\n  \n@dacarley\n\n\n\n\n\n\nSupport \noptions\n Object with existing \nextract\n operation.\n  \n#309\n\n  \n@papandreou\n\n\n\n\n\n\nv0.11 - \"\nknife\n\"\n\n\nv0.11.4 - 5\nth\n November 2015\n\n\n\n\n\n\nAdd corners, e.g. \nnortheast\n, to existing \ngravity\n option.\n  \n#291\n\n  \n@brandonaaron\n\n\n\n\n\n\nEnsure correct auto-rotation for EXIF Orientation values 2 and 4.\n  \n#288\n\n  \n@brandonaaron\n\n\n\n\n\n\nMake static linking possible via \n--runtime_link\n install option.\n  \n#287\n\n  \n@vlapo\n\n\n\n\n\n\nv0.11.3 - 8\nth\n September 2015\n\n\n\n\nIntrepret blurSigma, sharpenFlat, and sharpenJagged as double precision.\n  \n#263\n\n  \n@chrisriley\n\n\n\n\nv0.11.2 - 28\nth\n August 2015\n\n\n\n\nAllow crop gravity to be provided as a String.\n  \n#255\n\n  \n@papandreou\n\n\nAdd support for io.js v3 and Node v4.\n  \n#246\n\n\n\n\nv0.11.1 - 12\nth\n August 2015\n\n\n\n\n\n\nSilence MSVC warning: \"C4530: C++ exception handler used, but unwind semantics are not enabled\".\n  \n#244\n\n  \n@TheThing\n\n\n\n\n\n\nSuppress gamma correction for input image with alpha transparency.\n  \n#249\n\n  \n@compeak\n\n\n\n\n\n\nv0.11.0 - 15\nth\n July 2015\n\n\n\n\n\n\nAllow alpha transparency compositing via new \noverlayWith\n method.\n  \n#97\n\n  \n@gasi\n\n\n\n\n\n\nExpose raw ICC profile data as a Buffer when using \nmetadata\n.\n  \n#129\n\n  \n@homerjam\n\n\n\n\n\n\nAllow image header updates via a parameter passed to existing \nwithMetadata\n method.\n  Provide initial support for EXIF \nOrientation\n tag,\n  which if present is now removed when using \nrotate\n, \nflip\n or \nflop\n.\n  \n#189\n\n  \n@h2non\n\n\n\n\n\n\nTighten constructor parameter checks.\n  \n#221\n\n  \n@mikemorris\n\n\n\n\n\n\nAllow one input Stream to be shared with two or more output Streams via new \nclone\n method.\n  \n#235\n\n  \n@jaubourg\n\n\n\n\n\n\nUse \nround\n instead of \nfloor\n when auto-scaling dimensions to avoid floating-point rounding errors.\n  \n#238\n\n  \n@richardadjogah\n\n\n\n\n\n\nv0.10 - \"\njudgment\n\"\n\n\nv0.10.1 - 1\nst\n June 2015\n\n\n\n\n\n\nAllow embed of image with alpha transparency onto non-transparent background.\n  \n#204\n\n  \n@mikemliu\n\n\n\n\n\n\nInclude C standard library for \natoi\n as Xcode 6.3 appears to no longer do this.\n  \n#228\n\n  \n@doggan\n\n\n\n\n\n\nv0.10.0 - 23\nrd\n April 2015\n\n\n\n\n\n\nAdd support for Windows (x86).\n  \n#19\n\n  \n@DullReferenceException\n\n  \n@itsananderson\n\n\n\n\n\n\nAdd support for Openslide input and DeepZoom output.\n  \n#146\n\n  \n@mvictoras\n\n\n\n\n\n\nAllow arbitrary aspect ratios when resizing images via new \nignoreAspectRatio\n method.\n  \n#192\n\n  \n@skedastik\n\n\n\n\n\n\nEnhance output image contrast by stretching its luminance to cover the full dynamic range via new \nnormalize\n method.\n  \n#194\n\n  \n@bkw\n\n  \n@codingforce", 
            "title": "\u66f4\u65b0\u65e5\u5fd7"
        }, 
        {
            "location": "/changelog/#_1", 
            "text": "", 
            "title": "\u66f4\u65b0\u65e5\u5fd7"
        }, 
        {
            "location": "/changelog/#v019-suit", 
            "text": "Requires libvips v8.6.0.", 
            "title": "v0.19 - \"suit\""
        }, 
        {
            "location": "/changelog/#v0190-tbd", 
            "text": "Expose offset coordinates of strategy-based crop.\n   #868 \n   @mirohristov-com    PNG output now defaults to adaptiveFiltering=false, compressionLevel=9\n   #872 \n   @wmertens    Add stats feature for pixel-derived image statistics.\n   #915 \n   @rnanwani    Add failOnError option to fail-fast on bad input image data.\n   #976 \n   @mceachen    Resize: switch to libvips' implementation, make fastShrinkOnLoad optional, remove interpolator and centreSampling options.\n   #977 \n   @jardakotesovec    Attach finish event listener to a clone only for Stream-based input.\n   #995 \n   @whmountains    Add tilecache before smartcrop to avoid over-computation of previous operations.\n   #1028 \n   @coffeebite    Prevent toFile extension taking precedence over requested format.\n   #1037 \n   @tomgallagher    Add support for gravity option to existing embed feature.\n   #1038 \n   @AzureByte    TIFF output: switch default predictor from 'none' to 'horizontal' to match libvips' behaviour.", 
            "title": "v0.19.0 - TBD"
        }, 
        {
            "location": "/changelog/#v018-ridge", 
            "text": "Requires libvips v8.5.5.", 
            "title": "v0.18 - \"ridge\""
        }, 
        {
            "location": "/changelog/#v0184-18th-september-2017", 
            "text": "Ensure input Buffer really is marked as Persistent, prevents mark-sweep GC.\n   #950 \n   @lfdoherty", 
            "title": "v0.18.4 - 18th September 2017"
        }, 
        {
            "location": "/changelog/#v0183-13th-september-2017", 
            "text": "Skip shrink-on-load when trimming.\n   #888 \n   @kleisauke    Migrate from got to simple-get for basic auth support.\n   #945 \n   @pbomb", 
            "title": "v0.18.3 - 13th September 2017"
        }, 
        {
            "location": "/changelog/#v0182-1st-july-2017", 
            "text": "Expose libvips' xres and yres properties for TIFF output.\n   #828 \n   @YvesBos    Ensure flip and flop operations work with auto-rotate.\n   #837 \n   @rexxars    Allow binary download URL override via SHARP_DIST_BASE_URL env variable.\n   #841    Add support for Solus Linux.\n   #857 \n   @ekremkaraca", 
            "title": "v0.18.2 - 1st July 2017"
        }, 
        {
            "location": "/changelog/#v0181-30th-may-2017", 
            "text": "Remove regression from #781 that could cause incorrect shrink calculation.\n   #831 \n   @suprMax", 
            "title": "v0.18.1 - 30th May 2017"
        }, 
        {
            "location": "/changelog/#v0180-30th-may-2017", 
            "text": "Remove the previously-deprecated output format \"option\" functions:\n    quality, progressive, compressionLevel, withoutAdaptiveFiltering,\n    withoutChromaSubsampling, trellisQuantisation, trellisQuantization,\n    overshootDeringing, optimiseScans and optimizeScans.    Ensure maximum output dimensions are based on the format to be used.\n   #176 \n   @stephanebachelier    Avoid costly (un)premultiply when using overlayWith without alpha channel.\n   #573 \n   @strarsis    Include pixel depth (e.g. \"uchar\") when reading metadata.\n   #577 \n   @moedusa    Add support for Buffer and Stream-based TIFF output.\n   #587 \n   @strarsis    Expose warnings from libvips via NODE_DEBUG=sharp environment variable.\n   #607 \n   @puzrin    Switch to the libvips implementation of \"attention\" and \"entropy\" crop strategies.\n   #727    Improve performance and accuracy of nearest neighbour integral upsampling.\n   #752 \n   @MrIbby    Constructor single argument API: allow plain object, reject null/undefined.\n   #768 \n   @kub1x    Ensure ARM64 pre-built binaries use correct C++11 ABI version.\n   #772 \n   @ajiratech2    Prevent aliasing by using dynamic values for shrink(-on-load).\n   #781 \n   @kleisauke    Expose libvips' \"squash\" parameter to enable 1-bit TIFF output.\n   #783 \n   @YvesBos    Add support for rotation using any multiple of +/-90 degrees.\n   #791 \n   @ncoden    Add \"jpg\" alias to toFormat as shortened form of \"jpeg\".\n   #814 \n   @jingsam", 
            "title": "v0.18.0 - 30th May 2017"
        }, 
        {
            "location": "/changelog/#v017-quill", 
            "text": "Requires libvips v8.4.2.", 
            "title": "v0.17 - \"quill\""
        }, 
        {
            "location": "/changelog/#v0173-1st-april-2017", 
            "text": "Allow toBuffer to optionally resolve a Promise with both info and data.\n   #143 \n   @salzhrani    Create blank image of given width, height, channels and background.\n   #470 \n   @pjarts    Add support for the \"nearest\" kernel for image reductions.\n   #732 \n   @alice0meta    Add support for TIFF compression and predictor options.\n   #738 \n   @kristojorg", 
            "title": "v0.17.3 - 1st April 2017"
        }, 
        {
            "location": "/changelog/#v0172-11th-february-2017", 
            "text": "Ensure Readable side of Stream can start flowing after Writable side has finished.\n   #671 \n   @danhaller    Expose WebP alpha quality, lossless and near-lossless output options.\n   #685 \n   @rnanwani", 
            "title": "v0.17.2 - 11th February 2017"
        }, 
        {
            "location": "/changelog/#v0171-15th-january-2017", 
            "text": "Improve error messages for invalid parameters.\n   @spikeon \n   #644    Simplify expression for finding vips-cpp libdir.\n   #656    Allow HTTPS-over-HTTP proxy when downloading pre-compiled dependencies.\n   @wangzhiwei1888 \n   #679", 
            "title": "v0.17.1 - 15th January 2017"
        }, 
        {
            "location": "/changelog/#v0170-11th-december-2016", 
            "text": "Drop support for versions of Node prior to v4.    Deprecate the following output format \"option\" functions:\n    quality, progressive, compressionLevel, withoutAdaptiveFiltering,\n    withoutChromaSubsampling, trellisQuantisation, trellisQuantization,\n    overshootDeringing, optimiseScans and optimizeScans.\n  Access to these is now via output format functions, for example  quality(n) \n    is now  jpeg({quality: n})  and/or  webp({quality: n}) .    Autoconvert GIF and SVG input to PNG output if no other format is specified.    Expose libvips' \"centre\" resize option to mimic *magick's +0.5px convention.\n   #568    Ensure support for embedded base64 PNG and JPEG images within an SVG.\n   #601 \n   @dynamite-ready    Ensure premultiply operation occurs before box filter shrink.\n   #605 \n   @CmdrShepardsPie \n   @teroparvinen    Add support for PNG and WebP tile-based output formats (in addition to JPEG).\n   #622 \n   @ppaskaris    Allow use of extend with greyscale input.\n   #623 \n   @ppaskaris    Allow non-RGB input to embed/extend onto background with an alpha channel.\n   #646 \n   @DaGaMs", 
            "title": "v0.17.0 - 11th December 2016"
        }, 
        {
            "location": "/changelog/#v016-pencil", 
            "text": "Requires libvips v8.3.3", 
            "title": "v0.16 - \"pencil\""
        }, 
        {
            "location": "/changelog/#v0162-22nd-october-2016", 
            "text": "Restrict readelf usage to Linux only when detecting global libvips version.\n   #602 \n   @caoko", 
            "title": "v0.16.2 - 22nd October 2016"
        }, 
        {
            "location": "/changelog/#v0161-13th-october-2016", 
            "text": "C++11 ABI version is now auto-detected, remove sharp-cxx11 installation flag.    Add experimental 'attention' crop strategy.\n   #295    Include .node extension for Meteor's require() implementation.\n   #537 \n   @isjackwild    Ensure convolution kernel scale is clamped to a minimum value of 1.\n   #561 \n   @abagshaw    Correct calculation of y-axis placement when overlaying image at a fixed point.\n   #566 \n   @Nateowami", 
            "title": "v0.16.1 - 13th October 2016"
        }, 
        {
            "location": "/changelog/#v0160-18th-august-2016", 
            "text": "Add pre-compiled libvips for OS X, ARMv7 and ARMv8.\n   #312    Ensure boolean, bandbool, extractChannel ops occur before sRGB conversion.\n   #504 \n   @mhirsch    Recalculate factors after WebP shrink-on-load to avoid round-to-zero errors.\n   #508 \n   @asilvas    Prevent boolean errors during extract operation.\n   #511 \n   @mhirsch    Add joinChannel and toColourspace/toColorspace operations.\n   #513 \n   @mhirsch    Add support for raw pixel data with boolean and withOverlay operations.\n   #516 \n   @mhirsch    Prevent bandbool creating a single channel sRGB image.\n   #519 \n   @mhirsch    Ensure ICC profiles are removed from PNG output unless withMetadata used.\n   #521 \n   @ChrisPinewood    Add alpha channels, if missing, to overlayWith images.\n   #540 \n   @cmtt    Remove deprecated interpolateWith method - use resize(w, h, { interpolator: ... })\n   #310", 
            "title": "v0.16.0 - 18th August 2016"
        }, 
        {
            "location": "/changelog/#v015-outfit", 
            "text": "Requires libvips v8.3.1", 
            "title": "v0.15 - \"outfit\""
        }, 
        {
            "location": "/changelog/#v0151-12th-july-2016", 
            "text": "Concat Stream-based input in single operation for ~+3% perf and less GC.\n   #429 \n   @papandreou    Add alpha channel, if required, before extend operation.\n   #439 \n   @frulo    Allow overlay image to be repeated across entire image via tile option.\n   #443 \n   @lemnisk8    Add cutout option to overlayWith feature, applies only the alpha channel of the overlay image.\n   #448 \n   @kleisauke    Ensure scaling factors are calculated independently to prevent rounding errors.\n   #452 \n   @puzrin    Add --sharp-cxx11 flag to compile with gcc's new C++11 ABI.\n   #456 \n   @kapouer    Add top/left offset support to overlayWith operation.\n   #473 \n   @rnanwani    Add convolve operation for kernel-based convolution.\n   #479 \n   @mhirsch    Add greyscale option to threshold operation for colourspace conversion control.\n   #480 \n   @mhirsch    Ensure ICC profiles are licenced for distribution.\n   #486 \n   @kapouer    Allow images with an alpha channel to work with LAB-colourspace based sharpen.\n   #490 \n   @jwagner    Add trim operation to remove \"boring\" edges.\n   #492 \n   @kleisauke    Add bandbool feature for channel-wise boolean operations.\n   #496 \n   @mhirsch    Add extractChannel operation to extract a channel from an image.\n   #497 \n   @mhirsch    Add ability to read and write native libvips .v files.\n   #500 \n   @mhirsch    Add boolean feature for bitwise image operations.\n   #501 \n   @mhirsch", 
            "title": "v0.15.1 - 12th July 2016"
        }, 
        {
            "location": "/changelog/#v0150-21st-may-2016", 
            "text": "Use libvips' new Lanczos 3 kernel as default for image reduction.\n  Deprecate interpolateWith method, now provided as a resize option.\n   #310 \n   @jcupitt    Take advantage of libvips v8.3 features.\n  Add support for libvips' new GIF and SVG loaders.\n  Pre-built binaries now include giflib and librsvg, exclude *magick.\n  Use shrink-on-load for WebP input.\n  Break existing sharpen API to accept sigma and improve precision.\n   #369    Remove unnecessary (un)premultiply operations when not resizing/compositing.\n   #413 \n   @jardakotesovec", 
            "title": "v0.15.0 - 21st May 2016"
        }, 
        {
            "location": "/changelog/#v014-needle", 
            "text": "Requires libvips v8.2.3", 
            "title": "v0.14 - \"needle\""
        }, 
        {
            "location": "/changelog/#v0141-16th-april-2016", 
            "text": "Allow removal of limitation on input pixel count via limitInputPixels. Use with care.\n   #250 \n   #316 \n   @anandthakker \n   @kentongray    Use final output image for metadata passed to callback.\n   #399 \n   @salzhrani    Add support for writing tiled images to a zip container.\n   #402 \n   @felixbuenemann    Allow use of embed with 1 and 2 channel images.\n   #411 \n   @janaz    Improve Electron compatibility by allowing node-gyp rebuilds without npm.\n   #412 \n   @nouh", 
            "title": "v0.14.1 - 16th April 2016"
        }, 
        {
            "location": "/changelog/#v0140-2nd-april-2016", 
            "text": "Add ability to extend (pad) the edges of an image.\n   #128 \n   @blowsie    Add support for Zoomify and Google tile layouts. Breaks existing tile API.\n   #223 \n   @bdunnette    Improvements to overlayWith: differing sizes/formats, gravity, buffer input.\n   #239 \n   @chrisriley    Add entropy-based crop strategy to remove least interesting edges.\n   #295 \n   @rightaway    Expose density metadata; set density of images from vector input.\n   #338 \n   @lookfirst    Emit post-processing 'info' event for Stream output.\n   #367 \n   @salzhrani    Ensure output image EXIF Orientation values are within 1-8 range.\n   #385 \n   @jtobinisaniceguy    Ensure ratios are not swapped when rotating 90/270 and ignoring aspect.\n   #387 \n   @kleisauke    Remove deprecated style of calling extract API. Breaks calls using positional arguments.\n   #276", 
            "title": "v0.14.0 - 2nd April 2016"
        }, 
        {
            "location": "/changelog/#v013-mind", 
            "text": "Requires libvips v8.2.2", 
            "title": "v0.13 - \"mind\""
        }, 
        {
            "location": "/changelog/#v0131-27th-february-2016", 
            "text": "Fix embedding onto transparent backgrounds; regression introduced in v0.13.0.\n   #366 \n   @diegocsandrim", 
            "title": "v0.13.1 - 27th February 2016"
        }, 
        {
            "location": "/changelog/#v0130-15th-february-2016", 
            "text": "Improve vector image support by allowing control of density/DPI.\n  Switch pre-built libs from Imagemagick to Graphicsmagick.\n   #110 \n   @bradisbell    Add support for raw, uncompressed pixel Buffer/Stream input.\n   #220 \n   @mikemorris    Switch from libvips' C to C++ bindings, requires upgrade to v8.2.2.\n   #299    Control number of open files in libvips' cache; breaks existing  cache  behaviour.\n   #315 \n   @impomezia    Ensure 16-bit input images can be normalised and embedded onto transparent backgrounds.\n   #339 \n   #340 \n   @janaz    Ensure selected format takes precedence over any unknown output filename extension.\n   #344 \n   @ubaltaci    Add support for libvips' PBM, PGM, PPM and FITS image format loaders.\n   #347 \n   @oaleynik    Ensure default crop gravity is center/centre.\n   #351 \n   @joelmukuthu    Improve support for musl libc systems e.g. Alpine Linux.\n   #354 \n   #359 \n   @download13 \n   @wjordan    Small optimisation when reducing by an integral factor to favour shrink over affine.    Add support for gamma correction of images with an alpha channel.", 
            "title": "v0.13.0 - 15th February 2016"
        }, 
        {
            "location": "/changelog/#v012-look", 
            "text": "Requires libvips v8.2.0", 
            "title": "v0.12 - \"look\""
        }, 
        {
            "location": "/changelog/#v0122-16th-january-2016", 
            "text": "Upgrade libvips to v8.2.0 for improved vips_shrink.    Add pre-compiled libvips for ARMv6+ CPUs.    Ensure 16-bit input images work with embed option.\n   #325 \n   @janaz    Allow compilation with gmake to provide FreeBSD support.\n   #326 \n   @c0decafe    Attempt to remove temporary file after installation.\n   #331 \n   @dtoubelis", 
            "title": "v0.12.2 - 16th January 2016"
        }, 
        {
            "location": "/changelog/#v0121-12th-december-2015", 
            "text": "Allow use of SIMD vector instructions (via liborc) to be toggled on/off.\n   #172 \n   @bkw \n   @puzrin    Ensure embedded ICC profiles output with perceptual intent.\n   #321 \n   @vlapo    Use the NPM-configured HTTPS proxy, if any, for binary downloads.", 
            "title": "v0.12.1 - 12th December 2015"
        }, 
        {
            "location": "/changelog/#v0120-23rd-november-2015", 
            "text": "Bundle pre-compiled libvips and its dependencies for 64-bit Linux and Windows.\n   #42    Take advantage of libvips v8.1.0+ features.\n   #152    Add support for 64-bit Windows. Drop support for 32-bit Windows.\n   #224 \n   @sabrehagen    Switch default interpolator to bicubic.\n   #289 \n   @mahnunchik    Pre-extract rotatation should not swap width/height.\n   #296 \n   @asilvas    Ensure 16-bit+alpha input images are (un)premultiplied correctly.\n   #301 \n   @izaakschroeder    Add  threshold  operation.\n   #303 \n   @dacarley    Add  negate  operation.\n   #306 \n   @dacarley    Support  options  Object with existing  extract  operation.\n   #309 \n   @papandreou", 
            "title": "v0.12.0 - 23rd November 2015"
        }, 
        {
            "location": "/changelog/#v011-knife", 
            "text": "", 
            "title": "v0.11 - \"knife\""
        }, 
        {
            "location": "/changelog/#v0114-5th-november-2015", 
            "text": "Add corners, e.g.  northeast , to existing  gravity  option.\n   #291 \n   @brandonaaron    Ensure correct auto-rotation for EXIF Orientation values 2 and 4.\n   #288 \n   @brandonaaron    Make static linking possible via  --runtime_link  install option.\n   #287 \n   @vlapo", 
            "title": "v0.11.4 - 5th November 2015"
        }, 
        {
            "location": "/changelog/#v0113-8th-september-2015", 
            "text": "Intrepret blurSigma, sharpenFlat, and sharpenJagged as double precision.\n   #263 \n   @chrisriley", 
            "title": "v0.11.3 - 8th September 2015"
        }, 
        {
            "location": "/changelog/#v0112-28th-august-2015", 
            "text": "Allow crop gravity to be provided as a String.\n   #255 \n   @papandreou  Add support for io.js v3 and Node v4.\n   #246", 
            "title": "v0.11.2 - 28th August 2015"
        }, 
        {
            "location": "/changelog/#v0111-12th-august-2015", 
            "text": "Silence MSVC warning: \"C4530: C++ exception handler used, but unwind semantics are not enabled\".\n   #244 \n   @TheThing    Suppress gamma correction for input image with alpha transparency.\n   #249 \n   @compeak", 
            "title": "v0.11.1 - 12th August 2015"
        }, 
        {
            "location": "/changelog/#v0110-15th-july-2015", 
            "text": "Allow alpha transparency compositing via new  overlayWith  method.\n   #97 \n   @gasi    Expose raw ICC profile data as a Buffer when using  metadata .\n   #129 \n   @homerjam    Allow image header updates via a parameter passed to existing  withMetadata  method.\n  Provide initial support for EXIF  Orientation  tag,\n  which if present is now removed when using  rotate ,  flip  or  flop .\n   #189 \n   @h2non    Tighten constructor parameter checks.\n   #221 \n   @mikemorris    Allow one input Stream to be shared with two or more output Streams via new  clone  method.\n   #235 \n   @jaubourg    Use  round  instead of  floor  when auto-scaling dimensions to avoid floating-point rounding errors.\n   #238 \n   @richardadjogah", 
            "title": "v0.11.0 - 15th July 2015"
        }, 
        {
            "location": "/changelog/#v010-judgment", 
            "text": "", 
            "title": "v0.10 - \"judgment\""
        }, 
        {
            "location": "/changelog/#v0101-1st-june-2015", 
            "text": "Allow embed of image with alpha transparency onto non-transparent background.\n   #204 \n   @mikemliu    Include C standard library for  atoi  as Xcode 6.3 appears to no longer do this.\n   #228 \n   @doggan", 
            "title": "v0.10.1 - 1st June 2015"
        }, 
        {
            "location": "/changelog/#v0100-23rd-april-2015", 
            "text": "Add support for Windows (x86).\n   #19 \n   @DullReferenceException \n   @itsananderson    Add support for Openslide input and DeepZoom output.\n   #146 \n   @mvictoras    Allow arbitrary aspect ratios when resizing images via new  ignoreAspectRatio  method.\n   #192 \n   @skedastik    Enhance output image contrast by stretching its luminance to cover the full dynamic range via new  normalize  method.\n   #194 \n   @bkw \n   @codingforce", 
            "title": "v0.10.0 - 23rd April 2015"
        }
    ]
}